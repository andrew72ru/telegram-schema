<?php

declare(strict_types=1);

namespace App\Telegram\Types;

use Symfony\Component\Serializer\Annotation\SerializedName;

/**
 * A file generated by the application. The application must handle updates updateFileGenerationStart and updateFileGenerationStop to generate the file when asked by TDLib.
 */
class InputFileGenerated extends InputFile implements \JsonSerializable
{
    public function __construct(
        /** Local path to a file from which the file is generated. The path doesn't have to be a valid path and is used by TDLib only to detect name and MIME type of the generated file */
        #[SerializedName('original_path')]
        private string $originalPath,
        /** String specifying the conversion applied to the original file; must be persistent across application restarts. Conversions beginning with '#' are reserved for internal TDLib usage */
        #[SerializedName('conversion')]
        private string $conversion,
        /** Expected size of the generated file, in bytes; pass 0 if unknown */
        #[SerializedName('expected_size')]
        private int $expectedSize,
    ) {
    }

    /**
     * Get Local path to a file from which the file is generated. The path doesn't have to be a valid path and is used by TDLib only to detect name and MIME type of the generated file.
     */
    public function getOriginalPath(): string
    {
        return $this->originalPath;
    }

    /**
     * Set Local path to a file from which the file is generated. The path doesn't have to be a valid path and is used by TDLib only to detect name and MIME type of the generated file.
     */
    public function setOriginalPath(string $originalPath): self
    {
        $this->originalPath = $originalPath;

        return $this;
    }

    /**
     * Get String specifying the conversion applied to the original file; must be persistent across application restarts. Conversions beginning with '#' are reserved for internal TDLib usage.
     */
    public function getConversion(): string
    {
        return $this->conversion;
    }

    /**
     * Set String specifying the conversion applied to the original file; must be persistent across application restarts. Conversions beginning with '#' are reserved for internal TDLib usage.
     */
    public function setConversion(string $conversion): self
    {
        $this->conversion = $conversion;

        return $this;
    }

    /**
     * Get Expected size of the generated file, in bytes; pass 0 if unknown.
     */
    public function getExpectedSize(): int
    {
        return $this->expectedSize;
    }

    /**
     * Set Expected size of the generated file, in bytes; pass 0 if unknown.
     */
    public function setExpectedSize(int $expectedSize): self
    {
        $this->expectedSize = $expectedSize;

        return $this;
    }

    public function jsonSerialize(): array
    {
        return [
            '@type' => 'inputFileGenerated',
            'original_path' => $this->getOriginalPath(),
            'conversion' => $this->getConversion(),
            'expected_size' => $this->getExpectedSize(),
        ];
    }
}
