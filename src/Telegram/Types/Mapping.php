<?php

declare(strict_types=1);

namespace App\Telegram\Types;

enum Mapping: string
{
    case error = Error::class;
    case ok = Ok::class;
    case authenticationCodeTypeTelegramMessage = AuthenticationCodeTypeTelegramMessage::class;
    case authenticationCodeTypeSms = AuthenticationCodeTypeSms::class;
    case authenticationCodeTypeSmsWord = AuthenticationCodeTypeSmsWord::class;
    case authenticationCodeTypeSmsPhrase = AuthenticationCodeTypeSmsPhrase::class;
    case authenticationCodeTypeCall = AuthenticationCodeTypeCall::class;
    case authenticationCodeTypeFlashCall = AuthenticationCodeTypeFlashCall::class;
    case authenticationCodeTypeMissedCall = AuthenticationCodeTypeMissedCall::class;
    case authenticationCodeTypeFragment = AuthenticationCodeTypeFragment::class;
    case authenticationCodeTypeFirebaseAndroid = AuthenticationCodeTypeFirebaseAndroid::class;
    case authenticationCodeTypeFirebaseIos = AuthenticationCodeTypeFirebaseIos::class;
    case authenticationCodeInfo = AuthenticationCodeInfo::class;
    case emailAddressAuthenticationCodeInfo = EmailAddressAuthenticationCodeInfo::class;
    case emailAddressAuthenticationCode = EmailAddressAuthenticationCode::class;
    case emailAddressAuthenticationAppleId = EmailAddressAuthenticationAppleId::class;
    case emailAddressAuthenticationGoogleId = EmailAddressAuthenticationGoogleId::class;
    case emailAddressResetStateAvailable = EmailAddressResetStateAvailable::class;
    case emailAddressResetStatePending = EmailAddressResetStatePending::class;
    case textEntity = TextEntity::class;
    case textEntities = TextEntities::class;
    case formattedText = FormattedText::class;
    case termsOfService = TermsOfService::class;
    case authorizationStateWaitTdlibParameters = AuthorizationStateWaitTdlibParameters::class;
    case authorizationStateWaitPhoneNumber = AuthorizationStateWaitPhoneNumber::class;
    case authorizationStateWaitPremiumPurchase = AuthorizationStateWaitPremiumPurchase::class;
    case authorizationStateWaitEmailAddress = AuthorizationStateWaitEmailAddress::class;
    case authorizationStateWaitEmailCode = AuthorizationStateWaitEmailCode::class;
    case authorizationStateWaitCode = AuthorizationStateWaitCode::class;
    case authorizationStateWaitOtherDeviceConfirmation = AuthorizationStateWaitOtherDeviceConfirmation::class;
    case authorizationStateWaitRegistration = AuthorizationStateWaitRegistration::class;
    case authorizationStateWaitPassword = AuthorizationStateWaitPassword::class;
    case authorizationStateReady = AuthorizationStateReady::class;
    case authorizationStateLoggingOut = AuthorizationStateLoggingOut::class;
    case authorizationStateClosing = AuthorizationStateClosing::class;
    case authorizationStateClosed = AuthorizationStateClosed::class;
    case firebaseDeviceVerificationParametersSafetyNet = FirebaseDeviceVerificationParametersSafetyNet::class;
    case firebaseDeviceVerificationParametersPlayIntegrity = FirebaseDeviceVerificationParametersPlayIntegrity::class;
    case passwordState = PasswordState::class;
    case recoveryEmailAddress = RecoveryEmailAddress::class;
    case temporaryPasswordState = TemporaryPasswordState::class;
    case localFile = LocalFile::class;
    case remoteFile = RemoteFile::class;
    case file = File::class;
    case inputFileId = InputFileId::class;
    case inputFileRemote = InputFileRemote::class;
    case inputFileLocal = InputFileLocal::class;
    case inputFileGenerated = InputFileGenerated::class;
    case photoSize = PhotoSize::class;
    case minithumbnail = Minithumbnail::class;
    case thumbnailFormatJpeg = ThumbnailFormatJpeg::class;
    case thumbnailFormatGif = ThumbnailFormatGif::class;
    case thumbnailFormatMpeg4 = ThumbnailFormatMpeg4::class;
    case thumbnailFormatPng = ThumbnailFormatPng::class;
    case thumbnailFormatTgs = ThumbnailFormatTgs::class;
    case thumbnailFormatWebm = ThumbnailFormatWebm::class;
    case thumbnailFormatWebp = ThumbnailFormatWebp::class;
    case thumbnail = Thumbnail::class;
    case maskPointForehead = MaskPointForehead::class;
    case maskPointEyes = MaskPointEyes::class;
    case maskPointMouth = MaskPointMouth::class;
    case maskPointChin = MaskPointChin::class;
    case maskPosition = MaskPosition::class;
    case stickerFormatWebp = StickerFormatWebp::class;
    case stickerFormatTgs = StickerFormatTgs::class;
    case stickerFormatWebm = StickerFormatWebm::class;
    case stickerTypeRegular = StickerTypeRegular::class;
    case stickerTypeMask = StickerTypeMask::class;
    case stickerTypeCustomEmoji = StickerTypeCustomEmoji::class;
    case stickerFullTypeRegular = StickerFullTypeRegular::class;
    case stickerFullTypeMask = StickerFullTypeMask::class;
    case stickerFullTypeCustomEmoji = StickerFullTypeCustomEmoji::class;
    case closedVectorPath = ClosedVectorPath::class;
    case outline = Outline::class;
    case pollOption = PollOption::class;
    case pollTypeRegular = PollTypeRegular::class;
    case pollTypeQuiz = PollTypeQuiz::class;
    case checklistTask = ChecklistTask::class;
    case inputChecklistTask = InputChecklistTask::class;
    case checklist = Checklist::class;
    case inputChecklist = InputChecklist::class;
    case animation = Animation::class;
    case audio = Audio::class;
    case document = Document::class;
    case photo = Photo::class;
    case sticker = Sticker::class;
    case video = Video::class;
    case videoNote = VideoNote::class;
    case voiceNote = VoiceNote::class;
    case animatedEmoji = AnimatedEmoji::class;
    case contact = Contact::class;
    case location = Location::class;
    case venue = Venue::class;
    case game = Game::class;
    case webApp = WebApp::class;
    case poll = Poll::class;
    case alternativeVideo = AlternativeVideo::class;
    case videoStoryboard = VideoStoryboard::class;
    case background = Background::class;
    case backgrounds = Backgrounds::class;
    case chatBackground = ChatBackground::class;
    case profilePhoto = ProfilePhoto::class;
    case chatPhotoInfo = ChatPhotoInfo::class;
    case userTypeRegular = UserTypeRegular::class;
    case userTypeDeleted = UserTypeDeleted::class;
    case userTypeBot = UserTypeBot::class;
    case userTypeUnknown = UserTypeUnknown::class;
    case botCommand = BotCommand::class;
    case botCommands = BotCommands::class;
    case botMenuButton = BotMenuButton::class;
    case botVerificationParameters = BotVerificationParameters::class;
    case botVerification = BotVerification::class;
    case verificationStatus = VerificationStatus::class;
    case chatLocation = ChatLocation::class;
    case birthdate = Birthdate::class;
    case closeBirthdayUser = CloseBirthdayUser::class;
    case businessAwayMessageScheduleAlways = BusinessAwayMessageScheduleAlways::class;
    case businessAwayMessageScheduleOutsideOfOpeningHours = BusinessAwayMessageScheduleOutsideOfOpeningHours::class;
    case businessAwayMessageScheduleCustom = BusinessAwayMessageScheduleCustom::class;
    case businessLocation = BusinessLocation::class;
    case businessRecipients = BusinessRecipients::class;
    case businessAwayMessageSettings = BusinessAwayMessageSettings::class;
    case businessGreetingMessageSettings = BusinessGreetingMessageSettings::class;
    case businessBotRights = BusinessBotRights::class;
    case businessConnectedBot = BusinessConnectedBot::class;
    case businessStartPage = BusinessStartPage::class;
    case inputBusinessStartPage = InputBusinessStartPage::class;
    case businessOpeningHoursInterval = BusinessOpeningHoursInterval::class;
    case businessOpeningHours = BusinessOpeningHours::class;
    case businessInfo = BusinessInfo::class;
    case businessChatLink = BusinessChatLink::class;
    case businessChatLinks = BusinessChatLinks::class;
    case inputBusinessChatLink = InputBusinessChatLink::class;
    case businessChatLinkInfo = BusinessChatLinkInfo::class;
    case chatPhotoStickerTypeRegularOrMask = ChatPhotoStickerTypeRegularOrMask::class;
    case chatPhotoStickerTypeCustomEmoji = ChatPhotoStickerTypeCustomEmoji::class;
    case chatPhotoSticker = ChatPhotoSticker::class;
    case animatedChatPhoto = AnimatedChatPhoto::class;
    case chatPhoto = ChatPhoto::class;
    case chatPhotos = ChatPhotos::class;
    case inputChatPhotoPrevious = InputChatPhotoPrevious::class;
    case inputChatPhotoStatic = InputChatPhotoStatic::class;
    case inputChatPhotoAnimation = InputChatPhotoAnimation::class;
    case inputChatPhotoSticker = InputChatPhotoSticker::class;
    case chatPermissions = ChatPermissions::class;
    case chatAdministratorRights = ChatAdministratorRights::class;
    case starAmount = StarAmount::class;
    case starSubscriptionTypeChannel = StarSubscriptionTypeChannel::class;
    case starSubscriptionTypeBot = StarSubscriptionTypeBot::class;
    case starSubscriptionPricing = StarSubscriptionPricing::class;
    case starSubscription = StarSubscription::class;
    case starSubscriptions = StarSubscriptions::class;
    case affiliateTypeCurrentUser = AffiliateTypeCurrentUser::class;
    case affiliateTypeBot = AffiliateTypeBot::class;
    case affiliateTypeChannel = AffiliateTypeChannel::class;
    case affiliateProgramSortOrderProfitability = AffiliateProgramSortOrderProfitability::class;
    case affiliateProgramSortOrderCreationDate = AffiliateProgramSortOrderCreationDate::class;
    case affiliateProgramSortOrderRevenue = AffiliateProgramSortOrderRevenue::class;
    case affiliateProgramParameters = AffiliateProgramParameters::class;
    case affiliateProgramInfo = AffiliateProgramInfo::class;
    case affiliateInfo = AffiliateInfo::class;
    case foundAffiliateProgram = FoundAffiliateProgram::class;
    case foundAffiliatePrograms = FoundAffiliatePrograms::class;
    case connectedAffiliateProgram = ConnectedAffiliateProgram::class;
    case connectedAffiliatePrograms = ConnectedAffiliatePrograms::class;
    case productInfo = ProductInfo::class;
    case premiumPaymentOption = PremiumPaymentOption::class;
    case premiumStatePaymentOption = PremiumStatePaymentOption::class;
    case premiumGiftPaymentOption = PremiumGiftPaymentOption::class;
    case premiumGiftPaymentOptions = PremiumGiftPaymentOptions::class;
    case premiumGiveawayPaymentOption = PremiumGiveawayPaymentOption::class;
    case premiumGiveawayPaymentOptions = PremiumGiveawayPaymentOptions::class;
    case premiumGiftCodeInfo = PremiumGiftCodeInfo::class;
    case starPaymentOption = StarPaymentOption::class;
    case starPaymentOptions = StarPaymentOptions::class;
    case starGiveawayWinnerOption = StarGiveawayWinnerOption::class;
    case starGiveawayPaymentOption = StarGiveawayPaymentOption::class;
    case starGiveawayPaymentOptions = StarGiveawayPaymentOptions::class;
    case acceptedGiftTypes = AcceptedGiftTypes::class;
    case giftSettings = GiftSettings::class;
    case upgradedGiftModel = UpgradedGiftModel::class;
    case upgradedGiftSymbol = UpgradedGiftSymbol::class;
    case upgradedGiftBackdropColors = UpgradedGiftBackdropColors::class;
    case upgradedGiftBackdrop = UpgradedGiftBackdrop::class;
    case upgradedGiftOriginalDetails = UpgradedGiftOriginalDetails::class;
    case gift = Gift::class;
    case upgradedGift = UpgradedGift::class;
    case upgradeGiftResult = UpgradeGiftResult::class;
    case availableGift = AvailableGift::class;
    case availableGifts = AvailableGifts::class;
    case upgradedGiftAttributeIdModel = UpgradedGiftAttributeIdModel::class;
    case upgradedGiftAttributeIdSymbol = UpgradedGiftAttributeIdSymbol::class;
    case upgradedGiftAttributeIdBackdrop = UpgradedGiftAttributeIdBackdrop::class;
    case upgradedGiftModelCount = UpgradedGiftModelCount::class;
    case upgradedGiftSymbolCount = UpgradedGiftSymbolCount::class;
    case upgradedGiftBackdropCount = UpgradedGiftBackdropCount::class;
    case giftForResaleOrderPrice = GiftForResaleOrderPrice::class;
    case giftForResaleOrderPriceChangeDate = GiftForResaleOrderPriceChangeDate::class;
    case giftForResaleOrderNumber = GiftForResaleOrderNumber::class;
    case giftForResale = GiftForResale::class;
    case giftsForResale = GiftsForResale::class;
    case sentGiftRegular = SentGiftRegular::class;
    case sentGiftUpgraded = SentGiftUpgraded::class;
    case receivedGift = ReceivedGift::class;
    case receivedGifts = ReceivedGifts::class;
    case giftUpgradePreview = GiftUpgradePreview::class;
    case starTransactionDirectionIncoming = StarTransactionDirectionIncoming::class;
    case starTransactionDirectionOutgoing = StarTransactionDirectionOutgoing::class;
    case starTransactionTypePremiumBotDeposit = StarTransactionTypePremiumBotDeposit::class;
    case starTransactionTypeAppStoreDeposit = StarTransactionTypeAppStoreDeposit::class;
    case starTransactionTypeGooglePlayDeposit = StarTransactionTypeGooglePlayDeposit::class;
    case starTransactionTypeFragmentDeposit = StarTransactionTypeFragmentDeposit::class;
    case starTransactionTypeUserDeposit = StarTransactionTypeUserDeposit::class;
    case starTransactionTypeGiveawayDeposit = StarTransactionTypeGiveawayDeposit::class;
    case starTransactionTypeFragmentWithdrawal = StarTransactionTypeFragmentWithdrawal::class;
    case starTransactionTypeTelegramAdsWithdrawal = StarTransactionTypeTelegramAdsWithdrawal::class;
    case starTransactionTypeTelegramApiUsage = StarTransactionTypeTelegramApiUsage::class;
    case starTransactionTypeBotPaidMediaPurchase = StarTransactionTypeBotPaidMediaPurchase::class;
    case starTransactionTypeBotPaidMediaSale = StarTransactionTypeBotPaidMediaSale::class;
    case starTransactionTypeChannelPaidMediaPurchase = StarTransactionTypeChannelPaidMediaPurchase::class;
    case starTransactionTypeChannelPaidMediaSale = StarTransactionTypeChannelPaidMediaSale::class;
    case starTransactionTypeBotInvoicePurchase = StarTransactionTypeBotInvoicePurchase::class;
    case starTransactionTypeBotInvoiceSale = StarTransactionTypeBotInvoiceSale::class;
    case starTransactionTypeBotSubscriptionPurchase = StarTransactionTypeBotSubscriptionPurchase::class;
    case starTransactionTypeBotSubscriptionSale = StarTransactionTypeBotSubscriptionSale::class;
    case starTransactionTypeChannelSubscriptionPurchase = StarTransactionTypeChannelSubscriptionPurchase::class;
    case starTransactionTypeChannelSubscriptionSale = StarTransactionTypeChannelSubscriptionSale::class;
    case starTransactionTypeGiftPurchase = StarTransactionTypeGiftPurchase::class;
    case starTransactionTypeGiftTransfer = StarTransactionTypeGiftTransfer::class;
    case starTransactionTypeGiftSale = StarTransactionTypeGiftSale::class;
    case starTransactionTypeGiftUpgrade = StarTransactionTypeGiftUpgrade::class;
    case starTransactionTypeUpgradedGiftPurchase = StarTransactionTypeUpgradedGiftPurchase::class;
    case starTransactionTypeUpgradedGiftSale = StarTransactionTypeUpgradedGiftSale::class;
    case starTransactionTypeChannelPaidReactionSend = StarTransactionTypeChannelPaidReactionSend::class;
    case starTransactionTypeChannelPaidReactionReceive = StarTransactionTypeChannelPaidReactionReceive::class;
    case starTransactionTypeAffiliateProgramCommission = StarTransactionTypeAffiliateProgramCommission::class;
    case starTransactionTypePaidMessageSend = StarTransactionTypePaidMessageSend::class;
    case starTransactionTypePaidMessageReceive = StarTransactionTypePaidMessageReceive::class;
    case starTransactionTypePremiumPurchase = StarTransactionTypePremiumPurchase::class;
    case starTransactionTypeBusinessBotTransferSend = StarTransactionTypeBusinessBotTransferSend::class;
    case starTransactionTypeBusinessBotTransferReceive = StarTransactionTypeBusinessBotTransferReceive::class;
    case starTransactionTypeUnsupported = StarTransactionTypeUnsupported::class;
    case starTransaction = StarTransaction::class;
    case starTransactions = StarTransactions::class;
    case giveawayParticipantStatusEligible = GiveawayParticipantStatusEligible::class;
    case giveawayParticipantStatusParticipating = GiveawayParticipantStatusParticipating::class;
    case giveawayParticipantStatusAlreadyWasMember = GiveawayParticipantStatusAlreadyWasMember::class;
    case giveawayParticipantStatusAdministrator = GiveawayParticipantStatusAdministrator::class;
    case giveawayParticipantStatusDisallowedCountry = GiveawayParticipantStatusDisallowedCountry::class;
    case giveawayInfoOngoing = GiveawayInfoOngoing::class;
    case giveawayInfoCompleted = GiveawayInfoCompleted::class;
    case giveawayPrizePremium = GiveawayPrizePremium::class;
    case giveawayPrizeStars = GiveawayPrizeStars::class;
    case accentColor = AccentColor::class;
    case profileAccentColors = ProfileAccentColors::class;
    case profileAccentColor = ProfileAccentColor::class;
    case emojiStatusTypeCustomEmoji = EmojiStatusTypeCustomEmoji::class;
    case emojiStatusTypeUpgradedGift = EmojiStatusTypeUpgradedGift::class;
    case emojiStatus = EmojiStatus::class;
    case emojiStatuses = EmojiStatuses::class;
    case emojiStatusCustomEmojis = EmojiStatusCustomEmojis::class;
    case usernames = Usernames::class;
    case user = User::class;
    case botInfo = BotInfo::class;
    case userFullInfo = UserFullInfo::class;
    case users = Users::class;
    case foundUsers = FoundUsers::class;
    case chatAdministrator = ChatAdministrator::class;
    case chatAdministrators = ChatAdministrators::class;
    case chatMemberStatusCreator = ChatMemberStatusCreator::class;
    case chatMemberStatusAdministrator = ChatMemberStatusAdministrator::class;
    case chatMemberStatusMember = ChatMemberStatusMember::class;
    case chatMemberStatusRestricted = ChatMemberStatusRestricted::class;
    case chatMemberStatusLeft = ChatMemberStatusLeft::class;
    case chatMemberStatusBanned = ChatMemberStatusBanned::class;
    case chatMember = ChatMember::class;
    case chatMembers = ChatMembers::class;
    case chatMembersFilterContacts = ChatMembersFilterContacts::class;
    case chatMembersFilterAdministrators = ChatMembersFilterAdministrators::class;
    case chatMembersFilterMembers = ChatMembersFilterMembers::class;
    case chatMembersFilterMention = ChatMembersFilterMention::class;
    case chatMembersFilterRestricted = ChatMembersFilterRestricted::class;
    case chatMembersFilterBanned = ChatMembersFilterBanned::class;
    case chatMembersFilterBots = ChatMembersFilterBots::class;
    case supergroupMembersFilterRecent = SupergroupMembersFilterRecent::class;
    case supergroupMembersFilterContacts = SupergroupMembersFilterContacts::class;
    case supergroupMembersFilterAdministrators = SupergroupMembersFilterAdministrators::class;
    case supergroupMembersFilterSearch = SupergroupMembersFilterSearch::class;
    case supergroupMembersFilterRestricted = SupergroupMembersFilterRestricted::class;
    case supergroupMembersFilterBanned = SupergroupMembersFilterBanned::class;
    case supergroupMembersFilterMention = SupergroupMembersFilterMention::class;
    case supergroupMembersFilterBots = SupergroupMembersFilterBots::class;
    case chatInviteLink = ChatInviteLink::class;
    case chatInviteLinks = ChatInviteLinks::class;
    case chatInviteLinkCount = ChatInviteLinkCount::class;
    case chatInviteLinkCounts = ChatInviteLinkCounts::class;
    case chatInviteLinkMember = ChatInviteLinkMember::class;
    case chatInviteLinkMembers = ChatInviteLinkMembers::class;
    case inviteLinkChatTypeBasicGroup = InviteLinkChatTypeBasicGroup::class;
    case inviteLinkChatTypeSupergroup = InviteLinkChatTypeSupergroup::class;
    case inviteLinkChatTypeChannel = InviteLinkChatTypeChannel::class;
    case chatInviteLinkSubscriptionInfo = ChatInviteLinkSubscriptionInfo::class;
    case chatInviteLinkInfo = ChatInviteLinkInfo::class;
    case chatJoinRequest = ChatJoinRequest::class;
    case chatJoinRequests = ChatJoinRequests::class;
    case chatJoinRequestsInfo = ChatJoinRequestsInfo::class;
    case basicGroup = BasicGroup::class;
    case basicGroupFullInfo = BasicGroupFullInfo::class;
    case supergroup = Supergroup::class;
    case supergroupFullInfo = SupergroupFullInfo::class;
    case secretChatStatePending = SecretChatStatePending::class;
    case secretChatStateReady = SecretChatStateReady::class;
    case secretChatStateClosed = SecretChatStateClosed::class;
    case secretChat = SecretChat::class;
    case messageSenderUser = MessageSenderUser::class;
    case messageSenderChat = MessageSenderChat::class;
    case messageSenders = MessageSenders::class;
    case chatMessageSender = ChatMessageSender::class;
    case chatMessageSenders = ChatMessageSenders::class;
    case messageReadDateRead = MessageReadDateRead::class;
    case messageReadDateUnread = MessageReadDateUnread::class;
    case messageReadDateTooOld = MessageReadDateTooOld::class;
    case messageReadDateUserPrivacyRestricted = MessageReadDateUserPrivacyRestricted::class;
    case messageReadDateMyPrivacyRestricted = MessageReadDateMyPrivacyRestricted::class;
    case messageViewer = MessageViewer::class;
    case messageViewers = MessageViewers::class;
    case messageOriginUser = MessageOriginUser::class;
    case messageOriginHiddenUser = MessageOriginHiddenUser::class;
    case messageOriginChat = MessageOriginChat::class;
    case messageOriginChannel = MessageOriginChannel::class;
    case forwardSource = ForwardSource::class;
    case reactionTypeEmoji = ReactionTypeEmoji::class;
    case reactionTypeCustomEmoji = ReactionTypeCustomEmoji::class;
    case reactionTypePaid = ReactionTypePaid::class;
    case paidReactionTypeRegular = PaidReactionTypeRegular::class;
    case paidReactionTypeAnonymous = PaidReactionTypeAnonymous::class;
    case paidReactionTypeChat = PaidReactionTypeChat::class;
    case paidReactor = PaidReactor::class;
    case messageForwardInfo = MessageForwardInfo::class;
    case messageImportInfo = MessageImportInfo::class;
    case messageReplyInfo = MessageReplyInfo::class;
    case messageReaction = MessageReaction::class;
    case messageReactions = MessageReactions::class;
    case messageInteractionInfo = MessageInteractionInfo::class;
    case unreadReaction = UnreadReaction::class;
    case messageTopicForum = MessageTopicForum::class;
    case messageTopicDirectMessages = MessageTopicDirectMessages::class;
    case messageTopicSavedMessages = MessageTopicSavedMessages::class;
    case messageEffectTypeEmojiReaction = MessageEffectTypeEmojiReaction::class;
    case messageEffectTypePremiumSticker = MessageEffectTypePremiumSticker::class;
    case messageEffect = MessageEffect::class;
    case messageSendingStatePending = MessageSendingStatePending::class;
    case messageSendingStateFailed = MessageSendingStateFailed::class;
    case textQuote = TextQuote::class;
    case inputTextQuote = InputTextQuote::class;
    case messageReplyToMessage = MessageReplyToMessage::class;
    case messageReplyToStory = MessageReplyToStory::class;
    case inputMessageReplyToMessage = InputMessageReplyToMessage::class;
    case inputMessageReplyToExternalMessage = InputMessageReplyToExternalMessage::class;
    case inputMessageReplyToStory = InputMessageReplyToStory::class;
    case factCheck = FactCheck::class;
    case message = Message::class;
    case messages = Messages::class;
    case foundMessages = FoundMessages::class;
    case foundChatMessages = FoundChatMessages::class;
    case messagePosition = MessagePosition::class;
    case messagePositions = MessagePositions::class;
    case messageCalendarDay = MessageCalendarDay::class;
    case messageCalendar = MessageCalendar::class;
    case businessMessage = BusinessMessage::class;
    case businessMessages = BusinessMessages::class;
    case messageSourceChatHistory = MessageSourceChatHistory::class;
    case messageSourceMessageThreadHistory = MessageSourceMessageThreadHistory::class;
    case messageSourceForumTopicHistory = MessageSourceForumTopicHistory::class;
    case messageSourceDirectMessagesChatTopicHistory = MessageSourceDirectMessagesChatTopicHistory::class;
    case messageSourceHistoryPreview = MessageSourceHistoryPreview::class;
    case messageSourceChatList = MessageSourceChatList::class;
    case messageSourceSearch = MessageSourceSearch::class;
    case messageSourceChatEventLog = MessageSourceChatEventLog::class;
    case messageSourceNotification = MessageSourceNotification::class;
    case messageSourceScreenshot = MessageSourceScreenshot::class;
    case messageSourceOther = MessageSourceOther::class;
    case advertisementSponsor = AdvertisementSponsor::class;
    case sponsoredMessage = SponsoredMessage::class;
    case sponsoredMessages = SponsoredMessages::class;
    case sponsoredChat = SponsoredChat::class;
    case sponsoredChats = SponsoredChats::class;
    case videoMessageAdvertisement = VideoMessageAdvertisement::class;
    case videoMessageAdvertisements = VideoMessageAdvertisements::class;
    case reportOption = ReportOption::class;
    case reportSponsoredResultOk = ReportSponsoredResultOk::class;
    case reportSponsoredResultFailed = ReportSponsoredResultFailed::class;
    case reportSponsoredResultOptionRequired = ReportSponsoredResultOptionRequired::class;
    case reportSponsoredResultAdsHidden = ReportSponsoredResultAdsHidden::class;
    case reportSponsoredResultPremiumRequired = ReportSponsoredResultPremiumRequired::class;
    case fileDownload = FileDownload::class;
    case downloadedFileCounts = DownloadedFileCounts::class;
    case foundFileDownloads = FoundFileDownloads::class;
    case notificationSettingsScopePrivateChats = NotificationSettingsScopePrivateChats::class;
    case notificationSettingsScopeGroupChats = NotificationSettingsScopeGroupChats::class;
    case notificationSettingsScopeChannelChats = NotificationSettingsScopeChannelChats::class;
    case chatNotificationSettings = ChatNotificationSettings::class;
    case scopeNotificationSettings = ScopeNotificationSettings::class;
    case reactionNotificationSourceNone = ReactionNotificationSourceNone::class;
    case reactionNotificationSourceContacts = ReactionNotificationSourceContacts::class;
    case reactionNotificationSourceAll = ReactionNotificationSourceAll::class;
    case reactionNotificationSettings = ReactionNotificationSettings::class;
    case draftMessage = DraftMessage::class;
    case chatTypePrivate = ChatTypePrivate::class;
    case chatTypeBasicGroup = ChatTypeBasicGroup::class;
    case chatTypeSupergroup = ChatTypeSupergroup::class;
    case chatTypeSecret = ChatTypeSecret::class;
    case chatFolderIcon = ChatFolderIcon::class;
    case chatFolderName = ChatFolderName::class;
    case chatFolder = ChatFolder::class;
    case chatFolderInfo = ChatFolderInfo::class;
    case chatFolderInviteLink = ChatFolderInviteLink::class;
    case chatFolderInviteLinks = ChatFolderInviteLinks::class;
    case chatFolderInviteLinkInfo = ChatFolderInviteLinkInfo::class;
    case recommendedChatFolder = RecommendedChatFolder::class;
    case recommendedChatFolders = RecommendedChatFolders::class;
    case archiveChatListSettings = ArchiveChatListSettings::class;
    case chatListMain = ChatListMain::class;
    case chatListArchive = ChatListArchive::class;
    case chatListFolder = ChatListFolder::class;
    case chatLists = ChatLists::class;
    case chatSourceMtprotoProxy = ChatSourceMtprotoProxy::class;
    case chatSourcePublicServiceAnnouncement = ChatSourcePublicServiceAnnouncement::class;
    case chatPosition = ChatPosition::class;
    case chatAvailableReactionsAll = ChatAvailableReactionsAll::class;
    case chatAvailableReactionsSome = ChatAvailableReactionsSome::class;
    case savedMessagesTag = SavedMessagesTag::class;
    case savedMessagesTags = SavedMessagesTags::class;
    case businessBotManageBar = BusinessBotManageBar::class;
    case videoChat = VideoChat::class;
    case chat = Chat::class;
    case chats = Chats::class;
    case failedToAddMember = FailedToAddMember::class;
    case failedToAddMembers = FailedToAddMembers::class;
    case createdBasicGroupChat = CreatedBasicGroupChat::class;
    case publicChatTypeHasUsername = PublicChatTypeHasUsername::class;
    case publicChatTypeIsLocationBased = PublicChatTypeIsLocationBased::class;
    case accountInfo = AccountInfo::class;
    case chatActionBarReportSpam = ChatActionBarReportSpam::class;
    case chatActionBarInviteMembers = ChatActionBarInviteMembers::class;
    case chatActionBarReportAddBlock = ChatActionBarReportAddBlock::class;
    case chatActionBarAddContact = ChatActionBarAddContact::class;
    case chatActionBarSharePhoneNumber = ChatActionBarSharePhoneNumber::class;
    case chatActionBarJoinRequest = ChatActionBarJoinRequest::class;
    case keyboardButtonTypeText = KeyboardButtonTypeText::class;
    case keyboardButtonTypeRequestPhoneNumber = KeyboardButtonTypeRequestPhoneNumber::class;
    case keyboardButtonTypeRequestLocation = KeyboardButtonTypeRequestLocation::class;
    case keyboardButtonTypeRequestPoll = KeyboardButtonTypeRequestPoll::class;
    case keyboardButtonTypeRequestUsers = KeyboardButtonTypeRequestUsers::class;
    case keyboardButtonTypeRequestChat = KeyboardButtonTypeRequestChat::class;
    case keyboardButtonTypeWebApp = KeyboardButtonTypeWebApp::class;
    case keyboardButton = KeyboardButton::class;
    case inlineKeyboardButtonTypeUrl = InlineKeyboardButtonTypeUrl::class;
    case inlineKeyboardButtonTypeLoginUrl = InlineKeyboardButtonTypeLoginUrl::class;
    case inlineKeyboardButtonTypeWebApp = InlineKeyboardButtonTypeWebApp::class;
    case inlineKeyboardButtonTypeCallback = InlineKeyboardButtonTypeCallback::class;
    case inlineKeyboardButtonTypeCallbackWithPassword = InlineKeyboardButtonTypeCallbackWithPassword::class;
    case inlineKeyboardButtonTypeCallbackGame = InlineKeyboardButtonTypeCallbackGame::class;
    case inlineKeyboardButtonTypeSwitchInline = InlineKeyboardButtonTypeSwitchInline::class;
    case inlineKeyboardButtonTypeBuy = InlineKeyboardButtonTypeBuy::class;
    case inlineKeyboardButtonTypeUser = InlineKeyboardButtonTypeUser::class;
    case inlineKeyboardButtonTypeCopyText = InlineKeyboardButtonTypeCopyText::class;
    case inlineKeyboardButton = InlineKeyboardButton::class;
    case replyMarkupRemoveKeyboard = ReplyMarkupRemoveKeyboard::class;
    case replyMarkupForceReply = ReplyMarkupForceReply::class;
    case replyMarkupShowKeyboard = ReplyMarkupShowKeyboard::class;
    case replyMarkupInlineKeyboard = ReplyMarkupInlineKeyboard::class;
    case loginUrlInfoOpen = LoginUrlInfoOpen::class;
    case loginUrlInfoRequestConfirmation = LoginUrlInfoRequestConfirmation::class;
    case themeParameters = ThemeParameters::class;
    case webAppOpenModeCompact = WebAppOpenModeCompact::class;
    case webAppOpenModeFullSize = WebAppOpenModeFullSize::class;
    case webAppOpenModeFullScreen = WebAppOpenModeFullScreen::class;
    case foundWebApp = FoundWebApp::class;
    case webAppInfo = WebAppInfo::class;
    case mainWebApp = MainWebApp::class;
    case webAppOpenParameters = WebAppOpenParameters::class;
    case messageThreadInfo = MessageThreadInfo::class;
    case savedMessagesTopicTypeMyNotes = SavedMessagesTopicTypeMyNotes::class;
    case savedMessagesTopicTypeAuthorHidden = SavedMessagesTopicTypeAuthorHidden::class;
    case savedMessagesTopicTypeSavedFromChat = SavedMessagesTopicTypeSavedFromChat::class;
    case savedMessagesTopic = SavedMessagesTopic::class;
    case directMessagesChatTopic = DirectMessagesChatTopic::class;
    case forumTopicIcon = ForumTopicIcon::class;
    case forumTopicInfo = ForumTopicInfo::class;
    case forumTopic = ForumTopic::class;
    case forumTopics = ForumTopics::class;
    case linkPreviewOptions = LinkPreviewOptions::class;
    case sharedUser = SharedUser::class;
    case sharedChat = SharedChat::class;
    case themeSettings = ThemeSettings::class;
    case richTextPlain = RichTextPlain::class;
    case richTextBold = RichTextBold::class;
    case richTextItalic = RichTextItalic::class;
    case richTextUnderline = RichTextUnderline::class;
    case richTextStrikethrough = RichTextStrikethrough::class;
    case richTextFixed = RichTextFixed::class;
    case richTextUrl = RichTextUrl::class;
    case richTextEmailAddress = RichTextEmailAddress::class;
    case richTextSubscript = RichTextSubscript::class;
    case richTextSuperscript = RichTextSuperscript::class;
    case richTextMarked = RichTextMarked::class;
    case richTextPhoneNumber = RichTextPhoneNumber::class;
    case richTextIcon = RichTextIcon::class;
    case richTextReference = RichTextReference::class;
    case richTextAnchor = RichTextAnchor::class;
    case richTextAnchorLink = RichTextAnchorLink::class;
    case richTexts = RichTexts::class;
    case pageBlockCaption = PageBlockCaption::class;
    case pageBlockListItem = PageBlockListItem::class;
    case pageBlockHorizontalAlignmentLeft = PageBlockHorizontalAlignmentLeft::class;
    case pageBlockHorizontalAlignmentCenter = PageBlockHorizontalAlignmentCenter::class;
    case pageBlockHorizontalAlignmentRight = PageBlockHorizontalAlignmentRight::class;
    case pageBlockVerticalAlignmentTop = PageBlockVerticalAlignmentTop::class;
    case pageBlockVerticalAlignmentMiddle = PageBlockVerticalAlignmentMiddle::class;
    case pageBlockVerticalAlignmentBottom = PageBlockVerticalAlignmentBottom::class;
    case pageBlockTableCell = PageBlockTableCell::class;
    case pageBlockRelatedArticle = PageBlockRelatedArticle::class;
    case pageBlockTitle = PageBlockTitle::class;
    case pageBlockSubtitle = PageBlockSubtitle::class;
    case pageBlockAuthorDate = PageBlockAuthorDate::class;
    case pageBlockHeader = PageBlockHeader::class;
    case pageBlockSubheader = PageBlockSubheader::class;
    case pageBlockKicker = PageBlockKicker::class;
    case pageBlockParagraph = PageBlockParagraph::class;
    case pageBlockPreformatted = PageBlockPreformatted::class;
    case pageBlockFooter = PageBlockFooter::class;
    case pageBlockDivider = PageBlockDivider::class;
    case pageBlockAnchor = PageBlockAnchor::class;
    case pageBlockList = PageBlockList::class;
    case pageBlockBlockQuote = PageBlockBlockQuote::class;
    case pageBlockPullQuote = PageBlockPullQuote::class;
    case pageBlockAnimation = PageBlockAnimation::class;
    case pageBlockAudio = PageBlockAudio::class;
    case pageBlockPhoto = PageBlockPhoto::class;
    case pageBlockVideo = PageBlockVideo::class;
    case pageBlockVoiceNote = PageBlockVoiceNote::class;
    case pageBlockCover = PageBlockCover::class;
    case pageBlockEmbedded = PageBlockEmbedded::class;
    case pageBlockEmbeddedPost = PageBlockEmbeddedPost::class;
    case pageBlockCollage = PageBlockCollage::class;
    case pageBlockSlideshow = PageBlockSlideshow::class;
    case pageBlockChatLink = PageBlockChatLink::class;
    case pageBlockTable = PageBlockTable::class;
    case pageBlockDetails = PageBlockDetails::class;
    case pageBlockRelatedArticles = PageBlockRelatedArticles::class;
    case pageBlockMap = PageBlockMap::class;
    case webPageInstantView = WebPageInstantView::class;
    case linkPreviewAlbumMediaPhoto = LinkPreviewAlbumMediaPhoto::class;
    case linkPreviewAlbumMediaVideo = LinkPreviewAlbumMediaVideo::class;
    case linkPreviewTypeAlbum = LinkPreviewTypeAlbum::class;
    case linkPreviewTypeAnimation = LinkPreviewTypeAnimation::class;
    case linkPreviewTypeApp = LinkPreviewTypeApp::class;
    case linkPreviewTypeArticle = LinkPreviewTypeArticle::class;
    case linkPreviewTypeAudio = LinkPreviewTypeAudio::class;
    case linkPreviewTypeBackground = LinkPreviewTypeBackground::class;
    case linkPreviewTypeChannelBoost = LinkPreviewTypeChannelBoost::class;
    case linkPreviewTypeChat = LinkPreviewTypeChat::class;
    case linkPreviewTypeDocument = LinkPreviewTypeDocument::class;
    case linkPreviewTypeEmbeddedAnimationPlayer = LinkPreviewTypeEmbeddedAnimationPlayer::class;
    case linkPreviewTypeEmbeddedAudioPlayer = LinkPreviewTypeEmbeddedAudioPlayer::class;
    case linkPreviewTypeEmbeddedVideoPlayer = LinkPreviewTypeEmbeddedVideoPlayer::class;
    case linkPreviewTypeExternalAudio = LinkPreviewTypeExternalAudio::class;
    case linkPreviewTypeExternalVideo = LinkPreviewTypeExternalVideo::class;
    case linkPreviewTypeGroupCall = LinkPreviewTypeGroupCall::class;
    case linkPreviewTypeInvoice = LinkPreviewTypeInvoice::class;
    case linkPreviewTypeMessage = LinkPreviewTypeMessage::class;
    case linkPreviewTypePhoto = LinkPreviewTypePhoto::class;
    case linkPreviewTypePremiumGiftCode = LinkPreviewTypePremiumGiftCode::class;
    case linkPreviewTypeShareableChatFolder = LinkPreviewTypeShareableChatFolder::class;
    case linkPreviewTypeSticker = LinkPreviewTypeSticker::class;
    case linkPreviewTypeStickerSet = LinkPreviewTypeStickerSet::class;
    case linkPreviewTypeStory = LinkPreviewTypeStory::class;
    case linkPreviewTypeSupergroupBoost = LinkPreviewTypeSupergroupBoost::class;
    case linkPreviewTypeTheme = LinkPreviewTypeTheme::class;
    case linkPreviewTypeUnsupported = LinkPreviewTypeUnsupported::class;
    case linkPreviewTypeUpgradedGift = LinkPreviewTypeUpgradedGift::class;
    case linkPreviewTypeUser = LinkPreviewTypeUser::class;
    case linkPreviewTypeVideo = LinkPreviewTypeVideo::class;
    case linkPreviewTypeVideoChat = LinkPreviewTypeVideoChat::class;
    case linkPreviewTypeVideoNote = LinkPreviewTypeVideoNote::class;
    case linkPreviewTypeVoiceNote = LinkPreviewTypeVoiceNote::class;
    case linkPreviewTypeWebApp = LinkPreviewTypeWebApp::class;
    case linkPreview = LinkPreview::class;
    case countryInfo = CountryInfo::class;
    case countries = Countries::class;
    case phoneNumberInfo = PhoneNumberInfo::class;
    case collectibleItemTypeUsername = CollectibleItemTypeUsername::class;
    case collectibleItemTypePhoneNumber = CollectibleItemTypePhoneNumber::class;
    case collectibleItemInfo = CollectibleItemInfo::class;
    case bankCardActionOpenUrl = BankCardActionOpenUrl::class;
    case bankCardInfo = BankCardInfo::class;
    case address = Address::class;
    case locationAddress = LocationAddress::class;
    case labeledPricePart = LabeledPricePart::class;
    case invoice = Invoice::class;
    case orderInfo = OrderInfo::class;
    case shippingOption = ShippingOption::class;
    case savedCredentials = SavedCredentials::class;
    case inputCredentialsSaved = InputCredentialsSaved::class;
    case inputCredentialsNew = InputCredentialsNew::class;
    case inputCredentialsApplePay = InputCredentialsApplePay::class;
    case inputCredentialsGooglePay = InputCredentialsGooglePay::class;
    case paymentProviderSmartGlocal = PaymentProviderSmartGlocal::class;
    case paymentProviderStripe = PaymentProviderStripe::class;
    case paymentProviderOther = PaymentProviderOther::class;
    case paymentOption = PaymentOption::class;
    case paymentFormTypeRegular = PaymentFormTypeRegular::class;
    case paymentFormTypeStars = PaymentFormTypeStars::class;
    case paymentFormTypeStarSubscription = PaymentFormTypeStarSubscription::class;
    case paymentForm = PaymentForm::class;
    case validatedOrderInfo = ValidatedOrderInfo::class;
    case paymentResult = PaymentResult::class;
    case paymentReceiptTypeRegular = PaymentReceiptTypeRegular::class;
    case paymentReceiptTypeStars = PaymentReceiptTypeStars::class;
    case paymentReceipt = PaymentReceipt::class;
    case inputInvoiceMessage = InputInvoiceMessage::class;
    case inputInvoiceName = InputInvoiceName::class;
    case inputInvoiceTelegram = InputInvoiceTelegram::class;
    case paidMediaPreview = PaidMediaPreview::class;
    case paidMediaPhoto = PaidMediaPhoto::class;
    case paidMediaVideo = PaidMediaVideo::class;
    case paidMediaUnsupported = PaidMediaUnsupported::class;
    case giveawayParameters = GiveawayParameters::class;
    case datedFile = DatedFile::class;
    case passportElementTypePersonalDetails = PassportElementTypePersonalDetails::class;
    case passportElementTypePassport = PassportElementTypePassport::class;
    case passportElementTypeDriverLicense = PassportElementTypeDriverLicense::class;
    case passportElementTypeIdentityCard = PassportElementTypeIdentityCard::class;
    case passportElementTypeInternalPassport = PassportElementTypeInternalPassport::class;
    case passportElementTypeAddress = PassportElementTypeAddress::class;
    case passportElementTypeUtilityBill = PassportElementTypeUtilityBill::class;
    case passportElementTypeBankStatement = PassportElementTypeBankStatement::class;
    case passportElementTypeRentalAgreement = PassportElementTypeRentalAgreement::class;
    case passportElementTypePassportRegistration = PassportElementTypePassportRegistration::class;
    case passportElementTypeTemporaryRegistration = PassportElementTypeTemporaryRegistration::class;
    case passportElementTypePhoneNumber = PassportElementTypePhoneNumber::class;
    case passportElementTypeEmailAddress = PassportElementTypeEmailAddress::class;
    case date = Date::class;
    case personalDetails = PersonalDetails::class;
    case identityDocument = IdentityDocument::class;
    case inputIdentityDocument = InputIdentityDocument::class;
    case personalDocument = PersonalDocument::class;
    case inputPersonalDocument = InputPersonalDocument::class;
    case passportElementPersonalDetails = PassportElementPersonalDetails::class;
    case passportElementPassport = PassportElementPassport::class;
    case passportElementDriverLicense = PassportElementDriverLicense::class;
    case passportElementIdentityCard = PassportElementIdentityCard::class;
    case passportElementInternalPassport = PassportElementInternalPassport::class;
    case passportElementAddress = PassportElementAddress::class;
    case passportElementUtilityBill = PassportElementUtilityBill::class;
    case passportElementBankStatement = PassportElementBankStatement::class;
    case passportElementRentalAgreement = PassportElementRentalAgreement::class;
    case passportElementPassportRegistration = PassportElementPassportRegistration::class;
    case passportElementTemporaryRegistration = PassportElementTemporaryRegistration::class;
    case passportElementPhoneNumber = PassportElementPhoneNumber::class;
    case passportElementEmailAddress = PassportElementEmailAddress::class;
    case inputPassportElementPersonalDetails = InputPassportElementPersonalDetails::class;
    case inputPassportElementPassport = InputPassportElementPassport::class;
    case inputPassportElementDriverLicense = InputPassportElementDriverLicense::class;
    case inputPassportElementIdentityCard = InputPassportElementIdentityCard::class;
    case inputPassportElementInternalPassport = InputPassportElementInternalPassport::class;
    case inputPassportElementAddress = InputPassportElementAddress::class;
    case inputPassportElementUtilityBill = InputPassportElementUtilityBill::class;
    case inputPassportElementBankStatement = InputPassportElementBankStatement::class;
    case inputPassportElementRentalAgreement = InputPassportElementRentalAgreement::class;
    case inputPassportElementPassportRegistration = InputPassportElementPassportRegistration::class;
    case inputPassportElementTemporaryRegistration = InputPassportElementTemporaryRegistration::class;
    case inputPassportElementPhoneNumber = InputPassportElementPhoneNumber::class;
    case inputPassportElementEmailAddress = InputPassportElementEmailAddress::class;
    case passportElements = PassportElements::class;
    case passportElementErrorSourceUnspecified = PassportElementErrorSourceUnspecified::class;
    case passportElementErrorSourceDataField = PassportElementErrorSourceDataField::class;
    case passportElementErrorSourceFrontSide = PassportElementErrorSourceFrontSide::class;
    case passportElementErrorSourceReverseSide = PassportElementErrorSourceReverseSide::class;
    case passportElementErrorSourceSelfie = PassportElementErrorSourceSelfie::class;
    case passportElementErrorSourceTranslationFile = PassportElementErrorSourceTranslationFile::class;
    case passportElementErrorSourceTranslationFiles = PassportElementErrorSourceTranslationFiles::class;
    case passportElementErrorSourceFile = PassportElementErrorSourceFile::class;
    case passportElementErrorSourceFiles = PassportElementErrorSourceFiles::class;
    case passportElementError = PassportElementError::class;
    case passportSuitableElement = PassportSuitableElement::class;
    case passportRequiredElement = PassportRequiredElement::class;
    case passportAuthorizationForm = PassportAuthorizationForm::class;
    case passportElementsWithErrors = PassportElementsWithErrors::class;
    case encryptedCredentials = EncryptedCredentials::class;
    case encryptedPassportElement = EncryptedPassportElement::class;
    case inputPassportElementErrorSourceUnspecified = InputPassportElementErrorSourceUnspecified::class;
    case inputPassportElementErrorSourceDataField = InputPassportElementErrorSourceDataField::class;
    case inputPassportElementErrorSourceFrontSide = InputPassportElementErrorSourceFrontSide::class;
    case inputPassportElementErrorSourceReverseSide = InputPassportElementErrorSourceReverseSide::class;
    case inputPassportElementErrorSourceSelfie = InputPassportElementErrorSourceSelfie::class;
    case inputPassportElementErrorSourceTranslationFile = InputPassportElementErrorSourceTranslationFile::class;
    case inputPassportElementErrorSourceTranslationFiles = InputPassportElementErrorSourceTranslationFiles::class;
    case inputPassportElementErrorSourceFile = InputPassportElementErrorSourceFile::class;
    case inputPassportElementErrorSourceFiles = InputPassportElementErrorSourceFiles::class;
    case inputPassportElementError = InputPassportElementError::class;
    case messageText = MessageText::class;
    case messageAnimation = MessageAnimation::class;
    case messageAudio = MessageAudio::class;
    case messageDocument = MessageDocument::class;
    case messagePaidMedia = MessagePaidMedia::class;
    case messagePhoto = MessagePhoto::class;
    case messageSticker = MessageSticker::class;
    case messageVideo = MessageVideo::class;
    case messageVideoNote = MessageVideoNote::class;
    case messageVoiceNote = MessageVoiceNote::class;
    case messageExpiredPhoto = MessageExpiredPhoto::class;
    case messageExpiredVideo = MessageExpiredVideo::class;
    case messageExpiredVideoNote = MessageExpiredVideoNote::class;
    case messageExpiredVoiceNote = MessageExpiredVoiceNote::class;
    case messageLocation = MessageLocation::class;
    case messageVenue = MessageVenue::class;
    case messageContact = MessageContact::class;
    case messageAnimatedEmoji = MessageAnimatedEmoji::class;
    case messageDice = MessageDice::class;
    case messageGame = MessageGame::class;
    case messagePoll = MessagePoll::class;
    case messageStory = MessageStory::class;
    case messageChecklist = MessageChecklist::class;
    case messageInvoice = MessageInvoice::class;
    case messageCall = MessageCall::class;
    case messageGroupCall = MessageGroupCall::class;
    case messageVideoChatScheduled = MessageVideoChatScheduled::class;
    case messageVideoChatStarted = MessageVideoChatStarted::class;
    case messageVideoChatEnded = MessageVideoChatEnded::class;
    case messageInviteVideoChatParticipants = MessageInviteVideoChatParticipants::class;
    case messageBasicGroupChatCreate = MessageBasicGroupChatCreate::class;
    case messageSupergroupChatCreate = MessageSupergroupChatCreate::class;
    case messageChatChangeTitle = MessageChatChangeTitle::class;
    case messageChatChangePhoto = MessageChatChangePhoto::class;
    case messageChatDeletePhoto = MessageChatDeletePhoto::class;
    case messageChatAddMembers = MessageChatAddMembers::class;
    case messageChatJoinByLink = MessageChatJoinByLink::class;
    case messageChatJoinByRequest = MessageChatJoinByRequest::class;
    case messageChatDeleteMember = MessageChatDeleteMember::class;
    case messageChatUpgradeTo = MessageChatUpgradeTo::class;
    case messageChatUpgradeFrom = MessageChatUpgradeFrom::class;
    case messagePinMessage = MessagePinMessage::class;
    case messageScreenshotTaken = MessageScreenshotTaken::class;
    case messageChatSetBackground = MessageChatSetBackground::class;
    case messageChatSetTheme = MessageChatSetTheme::class;
    case messageChatSetMessageAutoDeleteTime = MessageChatSetMessageAutoDeleteTime::class;
    case messageChatBoost = MessageChatBoost::class;
    case messageForumTopicCreated = MessageForumTopicCreated::class;
    case messageForumTopicEdited = MessageForumTopicEdited::class;
    case messageForumTopicIsClosedToggled = MessageForumTopicIsClosedToggled::class;
    case messageForumTopicIsHiddenToggled = MessageForumTopicIsHiddenToggled::class;
    case messageSuggestProfilePhoto = MessageSuggestProfilePhoto::class;
    case messageCustomServiceAction = MessageCustomServiceAction::class;
    case messageGameScore = MessageGameScore::class;
    case messagePaymentSuccessful = MessagePaymentSuccessful::class;
    case messagePaymentSuccessfulBot = MessagePaymentSuccessfulBot::class;
    case messagePaymentRefunded = MessagePaymentRefunded::class;
    case messageGiftedPremium = MessageGiftedPremium::class;
    case messagePremiumGiftCode = MessagePremiumGiftCode::class;
    case messageGiveawayCreated = MessageGiveawayCreated::class;
    case messageGiveaway = MessageGiveaway::class;
    case messageGiveawayCompleted = MessageGiveawayCompleted::class;
    case messageGiveawayWinners = MessageGiveawayWinners::class;
    case messageGiftedStars = MessageGiftedStars::class;
    case messageGiveawayPrizeStars = MessageGiveawayPrizeStars::class;
    case messageGift = MessageGift::class;
    case messageUpgradedGift = MessageUpgradedGift::class;
    case messageRefundedUpgradedGift = MessageRefundedUpgradedGift::class;
    case messagePaidMessagesRefunded = MessagePaidMessagesRefunded::class;
    case messagePaidMessagePriceChanged = MessagePaidMessagePriceChanged::class;
    case messageDirectMessagePriceChanged = MessageDirectMessagePriceChanged::class;
    case messageChecklistTasksDone = MessageChecklistTasksDone::class;
    case messageChecklistTasksAdded = MessageChecklistTasksAdded::class;
    case messageContactRegistered = MessageContactRegistered::class;
    case messageUsersShared = MessageUsersShared::class;
    case messageChatShared = MessageChatShared::class;
    case messageBotWriteAccessAllowed = MessageBotWriteAccessAllowed::class;
    case messageWebAppDataSent = MessageWebAppDataSent::class;
    case messageWebAppDataReceived = MessageWebAppDataReceived::class;
    case messagePassportDataSent = MessagePassportDataSent::class;
    case messagePassportDataReceived = MessagePassportDataReceived::class;
    case messageProximityAlertTriggered = MessageProximityAlertTriggered::class;
    case messageUnsupported = MessageUnsupported::class;
    case textEntityTypeMention = TextEntityTypeMention::class;
    case textEntityTypeHashtag = TextEntityTypeHashtag::class;
    case textEntityTypeCashtag = TextEntityTypeCashtag::class;
    case textEntityTypeBotCommand = TextEntityTypeBotCommand::class;
    case textEntityTypeUrl = TextEntityTypeUrl::class;
    case textEntityTypeEmailAddress = TextEntityTypeEmailAddress::class;
    case textEntityTypePhoneNumber = TextEntityTypePhoneNumber::class;
    case textEntityTypeBankCardNumber = TextEntityTypeBankCardNumber::class;
    case textEntityTypeBold = TextEntityTypeBold::class;
    case textEntityTypeItalic = TextEntityTypeItalic::class;
    case textEntityTypeUnderline = TextEntityTypeUnderline::class;
    case textEntityTypeStrikethrough = TextEntityTypeStrikethrough::class;
    case textEntityTypeSpoiler = TextEntityTypeSpoiler::class;
    case textEntityTypeCode = TextEntityTypeCode::class;
    case textEntityTypePre = TextEntityTypePre::class;
    case textEntityTypePreCode = TextEntityTypePreCode::class;
    case textEntityTypeBlockQuote = TextEntityTypeBlockQuote::class;
    case textEntityTypeExpandableBlockQuote = TextEntityTypeExpandableBlockQuote::class;
    case textEntityTypeTextUrl = TextEntityTypeTextUrl::class;
    case textEntityTypeMentionName = TextEntityTypeMentionName::class;
    case textEntityTypeCustomEmoji = TextEntityTypeCustomEmoji::class;
    case textEntityTypeMediaTimestamp = TextEntityTypeMediaTimestamp::class;
    case inputThumbnail = InputThumbnail::class;
    case inputPaidMediaTypePhoto = InputPaidMediaTypePhoto::class;
    case inputPaidMediaTypeVideo = InputPaidMediaTypeVideo::class;
    case inputPaidMedia = InputPaidMedia::class;
    case messageSchedulingStateSendAtDate = MessageSchedulingStateSendAtDate::class;
    case messageSchedulingStateSendWhenOnline = MessageSchedulingStateSendWhenOnline::class;
    case messageSchedulingStateSendWhenVideoProcessed = MessageSchedulingStateSendWhenVideoProcessed::class;
    case messageSelfDestructTypeTimer = MessageSelfDestructTypeTimer::class;
    case messageSelfDestructTypeImmediately = MessageSelfDestructTypeImmediately::class;
    case messageSendOptions = MessageSendOptions::class;
    case messageCopyOptions = MessageCopyOptions::class;
    case inputMessageText = InputMessageText::class;
    case inputMessageAnimation = InputMessageAnimation::class;
    case inputMessageAudio = InputMessageAudio::class;
    case inputMessageDocument = InputMessageDocument::class;
    case inputMessagePaidMedia = InputMessagePaidMedia::class;
    case inputMessagePhoto = InputMessagePhoto::class;
    case inputMessageSticker = InputMessageSticker::class;
    case inputMessageVideo = InputMessageVideo::class;
    case inputMessageVideoNote = InputMessageVideoNote::class;
    case inputMessageVoiceNote = InputMessageVoiceNote::class;
    case inputMessageLocation = InputMessageLocation::class;
    case inputMessageVenue = InputMessageVenue::class;
    case inputMessageContact = InputMessageContact::class;
    case inputMessageDice = InputMessageDice::class;
    case inputMessageGame = InputMessageGame::class;
    case inputMessageInvoice = InputMessageInvoice::class;
    case inputMessagePoll = InputMessagePoll::class;
    case inputMessageStory = InputMessageStory::class;
    case inputMessageChecklist = InputMessageChecklist::class;
    case inputMessageForwarded = InputMessageForwarded::class;
    case messageProperties = MessageProperties::class;
    case searchMessagesFilterEmpty = SearchMessagesFilterEmpty::class;
    case searchMessagesFilterAnimation = SearchMessagesFilterAnimation::class;
    case searchMessagesFilterAudio = SearchMessagesFilterAudio::class;
    case searchMessagesFilterDocument = SearchMessagesFilterDocument::class;
    case searchMessagesFilterPhoto = SearchMessagesFilterPhoto::class;
    case searchMessagesFilterVideo = SearchMessagesFilterVideo::class;
    case searchMessagesFilterVoiceNote = SearchMessagesFilterVoiceNote::class;
    case searchMessagesFilterPhotoAndVideo = SearchMessagesFilterPhotoAndVideo::class;
    case searchMessagesFilterUrl = SearchMessagesFilterUrl::class;
    case searchMessagesFilterChatPhoto = SearchMessagesFilterChatPhoto::class;
    case searchMessagesFilterVideoNote = SearchMessagesFilterVideoNote::class;
    case searchMessagesFilterVoiceAndVideoNote = SearchMessagesFilterVoiceAndVideoNote::class;
    case searchMessagesFilterMention = SearchMessagesFilterMention::class;
    case searchMessagesFilterUnreadMention = SearchMessagesFilterUnreadMention::class;
    case searchMessagesFilterUnreadReaction = SearchMessagesFilterUnreadReaction::class;
    case searchMessagesFilterFailedToSend = SearchMessagesFilterFailedToSend::class;
    case searchMessagesFilterPinned = SearchMessagesFilterPinned::class;
    case searchMessagesChatTypeFilterPrivate = SearchMessagesChatTypeFilterPrivate::class;
    case searchMessagesChatTypeFilterGroup = SearchMessagesChatTypeFilterGroup::class;
    case searchMessagesChatTypeFilterChannel = SearchMessagesChatTypeFilterChannel::class;
    case chatActionTyping = ChatActionTyping::class;
    case chatActionRecordingVideo = ChatActionRecordingVideo::class;
    case chatActionUploadingVideo = ChatActionUploadingVideo::class;
    case chatActionRecordingVoiceNote = ChatActionRecordingVoiceNote::class;
    case chatActionUploadingVoiceNote = ChatActionUploadingVoiceNote::class;
    case chatActionUploadingPhoto = ChatActionUploadingPhoto::class;
    case chatActionUploadingDocument = ChatActionUploadingDocument::class;
    case chatActionChoosingSticker = ChatActionChoosingSticker::class;
    case chatActionChoosingLocation = ChatActionChoosingLocation::class;
    case chatActionChoosingContact = ChatActionChoosingContact::class;
    case chatActionStartPlayingGame = ChatActionStartPlayingGame::class;
    case chatActionRecordingVideoNote = ChatActionRecordingVideoNote::class;
    case chatActionUploadingVideoNote = ChatActionUploadingVideoNote::class;
    case chatActionWatchingAnimations = ChatActionWatchingAnimations::class;
    case chatActionCancel = ChatActionCancel::class;
    case userStatusEmpty = UserStatusEmpty::class;
    case userStatusOnline = UserStatusOnline::class;
    case userStatusOffline = UserStatusOffline::class;
    case userStatusRecently = UserStatusRecently::class;
    case userStatusLastWeek = UserStatusLastWeek::class;
    case userStatusLastMonth = UserStatusLastMonth::class;
    case emojiKeyword = EmojiKeyword::class;
    case emojiKeywords = EmojiKeywords::class;
    case stickers = Stickers::class;
    case emojis = Emojis::class;
    case stickerSet = StickerSet::class;
    case stickerSetInfo = StickerSetInfo::class;
    case stickerSets = StickerSets::class;
    case trendingStickerSets = TrendingStickerSets::class;
    case emojiCategorySourceSearch = EmojiCategorySourceSearch::class;
    case emojiCategorySourcePremium = EmojiCategorySourcePremium::class;
    case emojiCategory = EmojiCategory::class;
    case emojiCategories = EmojiCategories::class;
    case emojiCategoryTypeDefault = EmojiCategoryTypeDefault::class;
    case emojiCategoryTypeRegularStickers = EmojiCategoryTypeRegularStickers::class;
    case emojiCategoryTypeEmojiStatus = EmojiCategoryTypeEmojiStatus::class;
    case emojiCategoryTypeChatPhoto = EmojiCategoryTypeChatPhoto::class;
    case currentWeather = CurrentWeather::class;
    case storyAreaPosition = StoryAreaPosition::class;
    case storyAreaTypeLocation = StoryAreaTypeLocation::class;
    case storyAreaTypeVenue = StoryAreaTypeVenue::class;
    case storyAreaTypeSuggestedReaction = StoryAreaTypeSuggestedReaction::class;
    case storyAreaTypeMessage = StoryAreaTypeMessage::class;
    case storyAreaTypeLink = StoryAreaTypeLink::class;
    case storyAreaTypeWeather = StoryAreaTypeWeather::class;
    case storyAreaTypeUpgradedGift = StoryAreaTypeUpgradedGift::class;
    case storyArea = StoryArea::class;
    case inputStoryAreaTypeLocation = InputStoryAreaTypeLocation::class;
    case inputStoryAreaTypeFoundVenue = InputStoryAreaTypeFoundVenue::class;
    case inputStoryAreaTypePreviousVenue = InputStoryAreaTypePreviousVenue::class;
    case inputStoryAreaTypeSuggestedReaction = InputStoryAreaTypeSuggestedReaction::class;
    case inputStoryAreaTypeMessage = InputStoryAreaTypeMessage::class;
    case inputStoryAreaTypeLink = InputStoryAreaTypeLink::class;
    case inputStoryAreaTypeWeather = InputStoryAreaTypeWeather::class;
    case inputStoryAreaTypeUpgradedGift = InputStoryAreaTypeUpgradedGift::class;
    case inputStoryArea = InputStoryArea::class;
    case inputStoryAreas = InputStoryAreas::class;
    case storyVideo = StoryVideo::class;
    case storyContentPhoto = StoryContentPhoto::class;
    case storyContentVideo = StoryContentVideo::class;
    case storyContentUnsupported = StoryContentUnsupported::class;
    case inputStoryContentPhoto = InputStoryContentPhoto::class;
    case inputStoryContentVideo = InputStoryContentVideo::class;
    case storyListMain = StoryListMain::class;
    case storyListArchive = StoryListArchive::class;
    case storyOriginPublicStory = StoryOriginPublicStory::class;
    case storyOriginHiddenUser = StoryOriginHiddenUser::class;
    case storyRepostInfo = StoryRepostInfo::class;
    case storyInteractionInfo = StoryInteractionInfo::class;
    case story = Story::class;
    case stories = Stories::class;
    case foundStories = FoundStories::class;
    case storyFullId = StoryFullId::class;
    case storyInfo = StoryInfo::class;
    case chatActiveStories = ChatActiveStories::class;
    case storyInteractionTypeView = StoryInteractionTypeView::class;
    case storyInteractionTypeForward = StoryInteractionTypeForward::class;
    case storyInteractionTypeRepost = StoryInteractionTypeRepost::class;
    case storyInteraction = StoryInteraction::class;
    case storyInteractions = StoryInteractions::class;
    case quickReplyMessage = QuickReplyMessage::class;
    case quickReplyMessages = QuickReplyMessages::class;
    case quickReplyShortcut = QuickReplyShortcut::class;
    case publicForwardMessage = PublicForwardMessage::class;
    case publicForwardStory = PublicForwardStory::class;
    case publicForwards = PublicForwards::class;
    case botMediaPreview = BotMediaPreview::class;
    case botMediaPreviews = BotMediaPreviews::class;
    case botMediaPreviewInfo = BotMediaPreviewInfo::class;
    case chatBoostLevelFeatures = ChatBoostLevelFeatures::class;
    case chatBoostFeatures = ChatBoostFeatures::class;
    case chatBoostSourceGiftCode = ChatBoostSourceGiftCode::class;
    case chatBoostSourceGiveaway = ChatBoostSourceGiveaway::class;
    case chatBoostSourcePremium = ChatBoostSourcePremium::class;
    case prepaidGiveaway = PrepaidGiveaway::class;
    case chatBoostStatus = ChatBoostStatus::class;
    case chatBoost = ChatBoost::class;
    case foundChatBoosts = FoundChatBoosts::class;
    case chatBoostSlot = ChatBoostSlot::class;
    case chatBoostSlots = ChatBoostSlots::class;
    case resendCodeReasonUserRequest = ResendCodeReasonUserRequest::class;
    case resendCodeReasonVerificationFailed = ResendCodeReasonVerificationFailed::class;
    case callDiscardReasonEmpty = CallDiscardReasonEmpty::class;
    case callDiscardReasonMissed = CallDiscardReasonMissed::class;
    case callDiscardReasonDeclined = CallDiscardReasonDeclined::class;
    case callDiscardReasonDisconnected = CallDiscardReasonDisconnected::class;
    case callDiscardReasonHungUp = CallDiscardReasonHungUp::class;
    case callDiscardReasonUpgradeToGroupCall = CallDiscardReasonUpgradeToGroupCall::class;
    case callProtocol = CallProtocol::class;
    case callServerTypeTelegramReflector = CallServerTypeTelegramReflector::class;
    case callServerTypeWebrtc = CallServerTypeWebrtc::class;
    case callServer = CallServer::class;
    case callId = CallId::class;
    case groupCallId = GroupCallId::class;
    case callStatePending = CallStatePending::class;
    case callStateExchangingKeys = CallStateExchangingKeys::class;
    case callStateReady = CallStateReady::class;
    case callStateHangingUp = CallStateHangingUp::class;
    case callStateDiscarded = CallStateDiscarded::class;
    case callStateError = CallStateError::class;
    case groupCallJoinParameters = GroupCallJoinParameters::class;
    case groupCallVideoQualityThumbnail = GroupCallVideoQualityThumbnail::class;
    case groupCallVideoQualityMedium = GroupCallVideoQualityMedium::class;
    case groupCallVideoQualityFull = GroupCallVideoQualityFull::class;
    case videoChatStream = VideoChatStream::class;
    case videoChatStreams = VideoChatStreams::class;
    case rtmpUrl = RtmpUrl::class;
    case groupCallRecentSpeaker = GroupCallRecentSpeaker::class;
    case groupCall = GroupCall::class;
    case groupCallVideoSourceGroup = GroupCallVideoSourceGroup::class;
    case groupCallParticipantVideoInfo = GroupCallParticipantVideoInfo::class;
    case groupCallParticipant = GroupCallParticipant::class;
    case groupCallParticipants = GroupCallParticipants::class;
    case groupCallInfo = GroupCallInfo::class;
    case inviteGroupCallParticipantResultUserPrivacyRestricted = InviteGroupCallParticipantResultUserPrivacyRestricted::class;
    case inviteGroupCallParticipantResultUserAlreadyParticipant = InviteGroupCallParticipantResultUserAlreadyParticipant::class;
    case inviteGroupCallParticipantResultUserWasBanned = InviteGroupCallParticipantResultUserWasBanned::class;
    case inviteGroupCallParticipantResultSuccess = InviteGroupCallParticipantResultSuccess::class;
    case groupCallDataChannelMain = GroupCallDataChannelMain::class;
    case groupCallDataChannelScreenSharing = GroupCallDataChannelScreenSharing::class;
    case inputGroupCallLink = InputGroupCallLink::class;
    case inputGroupCallMessage = InputGroupCallMessage::class;
    case callProblemEcho = CallProblemEcho::class;
    case callProblemNoise = CallProblemNoise::class;
    case callProblemInterruptions = CallProblemInterruptions::class;
    case callProblemDistortedSpeech = CallProblemDistortedSpeech::class;
    case callProblemSilentLocal = CallProblemSilentLocal::class;
    case callProblemSilentRemote = CallProblemSilentRemote::class;
    case callProblemDropped = CallProblemDropped::class;
    case callProblemDistortedVideo = CallProblemDistortedVideo::class;
    case callProblemPixelatedVideo = CallProblemPixelatedVideo::class;
    case call = Call::class;
    case firebaseAuthenticationSettingsAndroid = FirebaseAuthenticationSettingsAndroid::class;
    case firebaseAuthenticationSettingsIos = FirebaseAuthenticationSettingsIos::class;
    case phoneNumberAuthenticationSettings = PhoneNumberAuthenticationSettings::class;
    case addedReaction = AddedReaction::class;
    case addedReactions = AddedReactions::class;
    case availableReaction = AvailableReaction::class;
    case availableReactions = AvailableReactions::class;
    case emojiReaction = EmojiReaction::class;
    case reactionUnavailabilityReasonAnonymousAdministrator = ReactionUnavailabilityReasonAnonymousAdministrator::class;
    case reactionUnavailabilityReasonGuest = ReactionUnavailabilityReasonGuest::class;
    case animations = Animations::class;
    case diceStickersRegular = DiceStickersRegular::class;
    case diceStickersSlotMachine = DiceStickersSlotMachine::class;
    case importedContacts = ImportedContacts::class;
    case speechRecognitionResultPending = SpeechRecognitionResultPending::class;
    case speechRecognitionResultText = SpeechRecognitionResultText::class;
    case speechRecognitionResultError = SpeechRecognitionResultError::class;
    case businessConnection = BusinessConnection::class;
    case attachmentMenuBotColor = AttachmentMenuBotColor::class;
    case attachmentMenuBot = AttachmentMenuBot::class;
    case sentWebAppMessage = SentWebAppMessage::class;
    case botWriteAccessAllowReasonConnectedWebsite = BotWriteAccessAllowReasonConnectedWebsite::class;
    case botWriteAccessAllowReasonAddedToAttachmentMenu = BotWriteAccessAllowReasonAddedToAttachmentMenu::class;
    case botWriteAccessAllowReasonLaunchedWebApp = BotWriteAccessAllowReasonLaunchedWebApp::class;
    case botWriteAccessAllowReasonAcceptedRequest = BotWriteAccessAllowReasonAcceptedRequest::class;
    case httpUrl = HttpUrl::class;
    case userLink = UserLink::class;
    case targetChatTypes = TargetChatTypes::class;
    case targetChatCurrent = TargetChatCurrent::class;
    case targetChatChosen = TargetChatChosen::class;
    case targetChatInternalLink = TargetChatInternalLink::class;
    case inputInlineQueryResultAnimation = InputInlineQueryResultAnimation::class;
    case inputInlineQueryResultArticle = InputInlineQueryResultArticle::class;
    case inputInlineQueryResultAudio = InputInlineQueryResultAudio::class;
    case inputInlineQueryResultContact = InputInlineQueryResultContact::class;
    case inputInlineQueryResultDocument = InputInlineQueryResultDocument::class;
    case inputInlineQueryResultGame = InputInlineQueryResultGame::class;
    case inputInlineQueryResultLocation = InputInlineQueryResultLocation::class;
    case inputInlineQueryResultPhoto = InputInlineQueryResultPhoto::class;
    case inputInlineQueryResultSticker = InputInlineQueryResultSticker::class;
    case inputInlineQueryResultVenue = InputInlineQueryResultVenue::class;
    case inputInlineQueryResultVideo = InputInlineQueryResultVideo::class;
    case inputInlineQueryResultVoiceNote = InputInlineQueryResultVoiceNote::class;
    case inlineQueryResultArticle = InlineQueryResultArticle::class;
    case inlineQueryResultContact = InlineQueryResultContact::class;
    case inlineQueryResultLocation = InlineQueryResultLocation::class;
    case inlineQueryResultVenue = InlineQueryResultVenue::class;
    case inlineQueryResultGame = InlineQueryResultGame::class;
    case inlineQueryResultAnimation = InlineQueryResultAnimation::class;
    case inlineQueryResultAudio = InlineQueryResultAudio::class;
    case inlineQueryResultDocument = InlineQueryResultDocument::class;
    case inlineQueryResultPhoto = InlineQueryResultPhoto::class;
    case inlineQueryResultSticker = InlineQueryResultSticker::class;
    case inlineQueryResultVideo = InlineQueryResultVideo::class;
    case inlineQueryResultVoiceNote = InlineQueryResultVoiceNote::class;
    case inlineQueryResultsButtonTypeStartBot = InlineQueryResultsButtonTypeStartBot::class;
    case inlineQueryResultsButtonTypeWebApp = InlineQueryResultsButtonTypeWebApp::class;
    case inlineQueryResultsButton = InlineQueryResultsButton::class;
    case inlineQueryResults = InlineQueryResults::class;
    case preparedInlineMessageId = PreparedInlineMessageId::class;
    case preparedInlineMessage = PreparedInlineMessage::class;
    case callbackQueryPayloadData = CallbackQueryPayloadData::class;
    case callbackQueryPayloadDataWithPassword = CallbackQueryPayloadDataWithPassword::class;
    case callbackQueryPayloadGame = CallbackQueryPayloadGame::class;
    case callbackQueryAnswer = CallbackQueryAnswer::class;
    case customRequestResult = CustomRequestResult::class;
    case gameHighScore = GameHighScore::class;
    case gameHighScores = GameHighScores::class;
    case chatEventMessageEdited = ChatEventMessageEdited::class;
    case chatEventMessageDeleted = ChatEventMessageDeleted::class;
    case chatEventMessagePinned = ChatEventMessagePinned::class;
    case chatEventMessageUnpinned = ChatEventMessageUnpinned::class;
    case chatEventPollStopped = ChatEventPollStopped::class;
    case chatEventMemberJoined = ChatEventMemberJoined::class;
    case chatEventMemberJoinedByInviteLink = ChatEventMemberJoinedByInviteLink::class;
    case chatEventMemberJoinedByRequest = ChatEventMemberJoinedByRequest::class;
    case chatEventMemberInvited = ChatEventMemberInvited::class;
    case chatEventMemberLeft = ChatEventMemberLeft::class;
    case chatEventMemberPromoted = ChatEventMemberPromoted::class;
    case chatEventMemberRestricted = ChatEventMemberRestricted::class;
    case chatEventMemberSubscriptionExtended = ChatEventMemberSubscriptionExtended::class;
    case chatEventAvailableReactionsChanged = ChatEventAvailableReactionsChanged::class;
    case chatEventBackgroundChanged = ChatEventBackgroundChanged::class;
    case chatEventDescriptionChanged = ChatEventDescriptionChanged::class;
    case chatEventEmojiStatusChanged = ChatEventEmojiStatusChanged::class;
    case chatEventLinkedChatChanged = ChatEventLinkedChatChanged::class;
    case chatEventLocationChanged = ChatEventLocationChanged::class;
    case chatEventMessageAutoDeleteTimeChanged = ChatEventMessageAutoDeleteTimeChanged::class;
    case chatEventPermissionsChanged = ChatEventPermissionsChanged::class;
    case chatEventPhotoChanged = ChatEventPhotoChanged::class;
    case chatEventSlowModeDelayChanged = ChatEventSlowModeDelayChanged::class;
    case chatEventStickerSetChanged = ChatEventStickerSetChanged::class;
    case chatEventCustomEmojiStickerSetChanged = ChatEventCustomEmojiStickerSetChanged::class;
    case chatEventTitleChanged = ChatEventTitleChanged::class;
    case chatEventUsernameChanged = ChatEventUsernameChanged::class;
    case chatEventActiveUsernamesChanged = ChatEventActiveUsernamesChanged::class;
    case chatEventAccentColorChanged = ChatEventAccentColorChanged::class;
    case chatEventProfileAccentColorChanged = ChatEventProfileAccentColorChanged::class;
    case chatEventHasProtectedContentToggled = ChatEventHasProtectedContentToggled::class;
    case chatEventInvitesToggled = ChatEventInvitesToggled::class;
    case chatEventIsAllHistoryAvailableToggled = ChatEventIsAllHistoryAvailableToggled::class;
    case chatEventHasAggressiveAntiSpamEnabledToggled = ChatEventHasAggressiveAntiSpamEnabledToggled::class;
    case chatEventSignMessagesToggled = ChatEventSignMessagesToggled::class;
    case chatEventShowMessageSenderToggled = ChatEventShowMessageSenderToggled::class;
    case chatEventAutomaticTranslationToggled = ChatEventAutomaticTranslationToggled::class;
    case chatEventInviteLinkEdited = ChatEventInviteLinkEdited::class;
    case chatEventInviteLinkRevoked = ChatEventInviteLinkRevoked::class;
    case chatEventInviteLinkDeleted = ChatEventInviteLinkDeleted::class;
    case chatEventVideoChatCreated = ChatEventVideoChatCreated::class;
    case chatEventVideoChatEnded = ChatEventVideoChatEnded::class;
    case chatEventVideoChatMuteNewParticipantsToggled = ChatEventVideoChatMuteNewParticipantsToggled::class;
    case chatEventVideoChatParticipantIsMutedToggled = ChatEventVideoChatParticipantIsMutedToggled::class;
    case chatEventVideoChatParticipantVolumeLevelChanged = ChatEventVideoChatParticipantVolumeLevelChanged::class;
    case chatEventIsForumToggled = ChatEventIsForumToggled::class;
    case chatEventForumTopicCreated = ChatEventForumTopicCreated::class;
    case chatEventForumTopicEdited = ChatEventForumTopicEdited::class;
    case chatEventForumTopicToggleIsClosed = ChatEventForumTopicToggleIsClosed::class;
    case chatEventForumTopicToggleIsHidden = ChatEventForumTopicToggleIsHidden::class;
    case chatEventForumTopicDeleted = ChatEventForumTopicDeleted::class;
    case chatEventForumTopicPinned = ChatEventForumTopicPinned::class;
    case chatEvent = ChatEvent::class;
    case chatEvents = ChatEvents::class;
    case chatEventLogFilters = ChatEventLogFilters::class;
    case languagePackStringValueOrdinary = LanguagePackStringValueOrdinary::class;
    case languagePackStringValuePluralized = LanguagePackStringValuePluralized::class;
    case languagePackStringValueDeleted = LanguagePackStringValueDeleted::class;
    case languagePackString = LanguagePackString::class;
    case languagePackStrings = LanguagePackStrings::class;
    case languagePackInfo = LanguagePackInfo::class;
    case localizationTargetInfo = LocalizationTargetInfo::class;
    case premiumLimitTypeSupergroupCount = PremiumLimitTypeSupergroupCount::class;
    case premiumLimitTypePinnedChatCount = PremiumLimitTypePinnedChatCount::class;
    case premiumLimitTypeCreatedPublicChatCount = PremiumLimitTypeCreatedPublicChatCount::class;
    case premiumLimitTypeSavedAnimationCount = PremiumLimitTypeSavedAnimationCount::class;
    case premiumLimitTypeFavoriteStickerCount = PremiumLimitTypeFavoriteStickerCount::class;
    case premiumLimitTypeChatFolderCount = PremiumLimitTypeChatFolderCount::class;
    case premiumLimitTypeChatFolderChosenChatCount = PremiumLimitTypeChatFolderChosenChatCount::class;
    case premiumLimitTypePinnedArchivedChatCount = PremiumLimitTypePinnedArchivedChatCount::class;
    case premiumLimitTypePinnedSavedMessagesTopicCount = PremiumLimitTypePinnedSavedMessagesTopicCount::class;
    case premiumLimitTypeCaptionLength = PremiumLimitTypeCaptionLength::class;
    case premiumLimitTypeBioLength = PremiumLimitTypeBioLength::class;
    case premiumLimitTypeChatFolderInviteLinkCount = PremiumLimitTypeChatFolderInviteLinkCount::class;
    case premiumLimitTypeShareableChatFolderCount = PremiumLimitTypeShareableChatFolderCount::class;
    case premiumLimitTypeActiveStoryCount = PremiumLimitTypeActiveStoryCount::class;
    case premiumLimitTypeWeeklyPostedStoryCount = PremiumLimitTypeWeeklyPostedStoryCount::class;
    case premiumLimitTypeMonthlyPostedStoryCount = PremiumLimitTypeMonthlyPostedStoryCount::class;
    case premiumLimitTypeStoryCaptionLength = PremiumLimitTypeStoryCaptionLength::class;
    case premiumLimitTypeStorySuggestedReactionAreaCount = PremiumLimitTypeStorySuggestedReactionAreaCount::class;
    case premiumLimitTypeSimilarChatCount = PremiumLimitTypeSimilarChatCount::class;
    case premiumFeatureIncreasedLimits = PremiumFeatureIncreasedLimits::class;
    case premiumFeatureIncreasedUploadFileSize = PremiumFeatureIncreasedUploadFileSize::class;
    case premiumFeatureImprovedDownloadSpeed = PremiumFeatureImprovedDownloadSpeed::class;
    case premiumFeatureVoiceRecognition = PremiumFeatureVoiceRecognition::class;
    case premiumFeatureDisabledAds = PremiumFeatureDisabledAds::class;
    case premiumFeatureUniqueReactions = PremiumFeatureUniqueReactions::class;
    case premiumFeatureUniqueStickers = PremiumFeatureUniqueStickers::class;
    case premiumFeatureCustomEmoji = PremiumFeatureCustomEmoji::class;
    case premiumFeatureAdvancedChatManagement = PremiumFeatureAdvancedChatManagement::class;
    case premiumFeatureProfileBadge = PremiumFeatureProfileBadge::class;
    case premiumFeatureEmojiStatus = PremiumFeatureEmojiStatus::class;
    case premiumFeatureAnimatedProfilePhoto = PremiumFeatureAnimatedProfilePhoto::class;
    case premiumFeatureForumTopicIcon = PremiumFeatureForumTopicIcon::class;
    case premiumFeatureAppIcons = PremiumFeatureAppIcons::class;
    case premiumFeatureRealTimeChatTranslation = PremiumFeatureRealTimeChatTranslation::class;
    case premiumFeatureUpgradedStories = PremiumFeatureUpgradedStories::class;
    case premiumFeatureChatBoost = PremiumFeatureChatBoost::class;
    case premiumFeatureAccentColor = PremiumFeatureAccentColor::class;
    case premiumFeatureBackgroundForBoth = PremiumFeatureBackgroundForBoth::class;
    case premiumFeatureSavedMessagesTags = PremiumFeatureSavedMessagesTags::class;
    case premiumFeatureMessagePrivacy = PremiumFeatureMessagePrivacy::class;
    case premiumFeatureLastSeenTimes = PremiumFeatureLastSeenTimes::class;
    case premiumFeatureBusiness = PremiumFeatureBusiness::class;
    case premiumFeatureMessageEffects = PremiumFeatureMessageEffects::class;
    case premiumFeatureChecklists = PremiumFeatureChecklists::class;
    case businessFeatureLocation = BusinessFeatureLocation::class;
    case businessFeatureOpeningHours = BusinessFeatureOpeningHours::class;
    case businessFeatureQuickReplies = BusinessFeatureQuickReplies::class;
    case businessFeatureGreetingMessage = BusinessFeatureGreetingMessage::class;
    case businessFeatureAwayMessage = BusinessFeatureAwayMessage::class;
    case businessFeatureAccountLinks = BusinessFeatureAccountLinks::class;
    case businessFeatureStartPage = BusinessFeatureStartPage::class;
    case businessFeatureBots = BusinessFeatureBots::class;
    case businessFeatureEmojiStatus = BusinessFeatureEmojiStatus::class;
    case businessFeatureChatFolderTags = BusinessFeatureChatFolderTags::class;
    case businessFeatureUpgradedStories = BusinessFeatureUpgradedStories::class;
    case premiumStoryFeaturePriorityOrder = PremiumStoryFeaturePriorityOrder::class;
    case premiumStoryFeatureStealthMode = PremiumStoryFeatureStealthMode::class;
    case premiumStoryFeaturePermanentViewsHistory = PremiumStoryFeaturePermanentViewsHistory::class;
    case premiumStoryFeatureCustomExpirationDuration = PremiumStoryFeatureCustomExpirationDuration::class;
    case premiumStoryFeatureSaveStories = PremiumStoryFeatureSaveStories::class;
    case premiumStoryFeatureLinksAndFormatting = PremiumStoryFeatureLinksAndFormatting::class;
    case premiumStoryFeatureVideoQuality = PremiumStoryFeatureVideoQuality::class;
    case premiumLimit = PremiumLimit::class;
    case premiumFeatures = PremiumFeatures::class;
    case businessFeatures = BusinessFeatures::class;
    case premiumSourceLimitExceeded = PremiumSourceLimitExceeded::class;
    case premiumSourceFeature = PremiumSourceFeature::class;
    case premiumSourceBusinessFeature = PremiumSourceBusinessFeature::class;
    case premiumSourceStoryFeature = PremiumSourceStoryFeature::class;
    case premiumSourceLink = PremiumSourceLink::class;
    case premiumSourceSettings = PremiumSourceSettings::class;
    case premiumFeaturePromotionAnimation = PremiumFeaturePromotionAnimation::class;
    case businessFeaturePromotionAnimation = BusinessFeaturePromotionAnimation::class;
    case premiumState = PremiumState::class;
    case storePaymentPurposePremiumSubscription = StorePaymentPurposePremiumSubscription::class;
    case storePaymentPurposePremiumGift = StorePaymentPurposePremiumGift::class;
    case storePaymentPurposePremiumGiftCodes = StorePaymentPurposePremiumGiftCodes::class;
    case storePaymentPurposePremiumGiveaway = StorePaymentPurposePremiumGiveaway::class;
    case storePaymentPurposeStarGiveaway = StorePaymentPurposeStarGiveaway::class;
    case storePaymentPurposeStars = StorePaymentPurposeStars::class;
    case storePaymentPurposeGiftedStars = StorePaymentPurposeGiftedStars::class;
    case storeTransactionAppStore = StoreTransactionAppStore::class;
    case storeTransactionGooglePlay = StoreTransactionGooglePlay::class;
    case telegramPaymentPurposePremiumGift = TelegramPaymentPurposePremiumGift::class;
    case telegramPaymentPurposePremiumGiftCodes = TelegramPaymentPurposePremiumGiftCodes::class;
    case telegramPaymentPurposePremiumGiveaway = TelegramPaymentPurposePremiumGiveaway::class;
    case telegramPaymentPurposeStars = TelegramPaymentPurposeStars::class;
    case telegramPaymentPurposeGiftedStars = TelegramPaymentPurposeGiftedStars::class;
    case telegramPaymentPurposeStarGiveaway = TelegramPaymentPurposeStarGiveaway::class;
    case telegramPaymentPurposeJoinChat = TelegramPaymentPurposeJoinChat::class;
    case deviceTokenFirebaseCloudMessaging = DeviceTokenFirebaseCloudMessaging::class;
    case deviceTokenApplePush = DeviceTokenApplePush::class;
    case deviceTokenApplePushVoIP = DeviceTokenApplePushVoIP::class;
    case deviceTokenWindowsPush = DeviceTokenWindowsPush::class;
    case deviceTokenMicrosoftPush = DeviceTokenMicrosoftPush::class;
    case deviceTokenMicrosoftPushVoIP = DeviceTokenMicrosoftPushVoIP::class;
    case deviceTokenWebPush = DeviceTokenWebPush::class;
    case deviceTokenSimplePush = DeviceTokenSimplePush::class;
    case deviceTokenUbuntuPush = DeviceTokenUbuntuPush::class;
    case deviceTokenBlackBerryPush = DeviceTokenBlackBerryPush::class;
    case deviceTokenTizenPush = DeviceTokenTizenPush::class;
    case deviceTokenHuaweiPush = DeviceTokenHuaweiPush::class;
    case pushReceiverId = PushReceiverId::class;
    case backgroundFillSolid = BackgroundFillSolid::class;
    case backgroundFillGradient = BackgroundFillGradient::class;
    case backgroundFillFreeformGradient = BackgroundFillFreeformGradient::class;
    case backgroundTypeWallpaper = BackgroundTypeWallpaper::class;
    case backgroundTypePattern = BackgroundTypePattern::class;
    case backgroundTypeFill = BackgroundTypeFill::class;
    case backgroundTypeChatTheme = BackgroundTypeChatTheme::class;
    case inputBackgroundLocal = InputBackgroundLocal::class;
    case inputBackgroundRemote = InputBackgroundRemote::class;
    case inputBackgroundPrevious = InputBackgroundPrevious::class;
    case chatTheme = ChatTheme::class;
    case timeZone = TimeZone::class;
    case timeZones = TimeZones::class;
    case hashtags = Hashtags::class;
    case canPostStoryResultOk = CanPostStoryResultOk::class;
    case canPostStoryResultPremiumNeeded = CanPostStoryResultPremiumNeeded::class;
    case canPostStoryResultBoostNeeded = CanPostStoryResultBoostNeeded::class;
    case canPostStoryResultActiveStoryLimitExceeded = CanPostStoryResultActiveStoryLimitExceeded::class;
    case canPostStoryResultWeeklyLimitExceeded = CanPostStoryResultWeeklyLimitExceeded::class;
    case canPostStoryResultMonthlyLimitExceeded = CanPostStoryResultMonthlyLimitExceeded::class;
    case canTransferOwnershipResultOk = CanTransferOwnershipResultOk::class;
    case canTransferOwnershipResultPasswordNeeded = CanTransferOwnershipResultPasswordNeeded::class;
    case canTransferOwnershipResultPasswordTooFresh = CanTransferOwnershipResultPasswordTooFresh::class;
    case canTransferOwnershipResultSessionTooFresh = CanTransferOwnershipResultSessionTooFresh::class;
    case checkChatUsernameResultOk = CheckChatUsernameResultOk::class;
    case checkChatUsernameResultUsernameInvalid = CheckChatUsernameResultUsernameInvalid::class;
    case checkChatUsernameResultUsernameOccupied = CheckChatUsernameResultUsernameOccupied::class;
    case checkChatUsernameResultUsernamePurchasable = CheckChatUsernameResultUsernamePurchasable::class;
    case checkChatUsernameResultPublicChatsTooMany = CheckChatUsernameResultPublicChatsTooMany::class;
    case checkChatUsernameResultPublicGroupsUnavailable = CheckChatUsernameResultPublicGroupsUnavailable::class;
    case checkStickerSetNameResultOk = CheckStickerSetNameResultOk::class;
    case checkStickerSetNameResultNameInvalid = CheckStickerSetNameResultNameInvalid::class;
    case checkStickerSetNameResultNameOccupied = CheckStickerSetNameResultNameOccupied::class;
    case resetPasswordResultOk = ResetPasswordResultOk::class;
    case resetPasswordResultPending = ResetPasswordResultPending::class;
    case resetPasswordResultDeclined = ResetPasswordResultDeclined::class;
    case messageFileTypePrivate = MessageFileTypePrivate::class;
    case messageFileTypeGroup = MessageFileTypeGroup::class;
    case messageFileTypeUnknown = MessageFileTypeUnknown::class;
    case pushMessageContentHidden = PushMessageContentHidden::class;
    case pushMessageContentAnimation = PushMessageContentAnimation::class;
    case pushMessageContentAudio = PushMessageContentAudio::class;
    case pushMessageContentContact = PushMessageContentContact::class;
    case pushMessageContentContactRegistered = PushMessageContentContactRegistered::class;
    case pushMessageContentDocument = PushMessageContentDocument::class;
    case pushMessageContentGame = PushMessageContentGame::class;
    case pushMessageContentGameScore = PushMessageContentGameScore::class;
    case pushMessageContentInvoice = PushMessageContentInvoice::class;
    case pushMessageContentLocation = PushMessageContentLocation::class;
    case pushMessageContentPaidMedia = PushMessageContentPaidMedia::class;
    case pushMessageContentPhoto = PushMessageContentPhoto::class;
    case pushMessageContentPoll = PushMessageContentPoll::class;
    case pushMessageContentPremiumGiftCode = PushMessageContentPremiumGiftCode::class;
    case pushMessageContentGiveaway = PushMessageContentGiveaway::class;
    case pushMessageContentGift = PushMessageContentGift::class;
    case pushMessageContentUpgradedGift = PushMessageContentUpgradedGift::class;
    case pushMessageContentScreenshotTaken = PushMessageContentScreenshotTaken::class;
    case pushMessageContentSticker = PushMessageContentSticker::class;
    case pushMessageContentStory = PushMessageContentStory::class;
    case pushMessageContentText = PushMessageContentText::class;
    case pushMessageContentChecklist = PushMessageContentChecklist::class;
    case pushMessageContentVideo = PushMessageContentVideo::class;
    case pushMessageContentVideoNote = PushMessageContentVideoNote::class;
    case pushMessageContentVoiceNote = PushMessageContentVoiceNote::class;
    case pushMessageContentBasicGroupChatCreate = PushMessageContentBasicGroupChatCreate::class;
    case pushMessageContentVideoChatStarted = PushMessageContentVideoChatStarted::class;
    case pushMessageContentVideoChatEnded = PushMessageContentVideoChatEnded::class;
    case pushMessageContentInviteVideoChatParticipants = PushMessageContentInviteVideoChatParticipants::class;
    case pushMessageContentChatAddMembers = PushMessageContentChatAddMembers::class;
    case pushMessageContentChatChangePhoto = PushMessageContentChatChangePhoto::class;
    case pushMessageContentChatChangeTitle = PushMessageContentChatChangeTitle::class;
    case pushMessageContentChatSetBackground = PushMessageContentChatSetBackground::class;
    case pushMessageContentChatSetTheme = PushMessageContentChatSetTheme::class;
    case pushMessageContentChatDeleteMember = PushMessageContentChatDeleteMember::class;
    case pushMessageContentChatJoinByLink = PushMessageContentChatJoinByLink::class;
    case pushMessageContentChatJoinByRequest = PushMessageContentChatJoinByRequest::class;
    case pushMessageContentRecurringPayment = PushMessageContentRecurringPayment::class;
    case pushMessageContentSuggestProfilePhoto = PushMessageContentSuggestProfilePhoto::class;
    case pushMessageContentProximityAlertTriggered = PushMessageContentProximityAlertTriggered::class;
    case pushMessageContentChecklistTasksAdded = PushMessageContentChecklistTasksAdded::class;
    case pushMessageContentChecklistTasksDone = PushMessageContentChecklistTasksDone::class;
    case pushMessageContentMessageForwards = PushMessageContentMessageForwards::class;
    case pushMessageContentMediaAlbum = PushMessageContentMediaAlbum::class;
    case notificationTypeNewMessage = NotificationTypeNewMessage::class;
    case notificationTypeNewSecretChat = NotificationTypeNewSecretChat::class;
    case notificationTypeNewCall = NotificationTypeNewCall::class;
    case notificationTypeNewPushMessage = NotificationTypeNewPushMessage::class;
    case notificationGroupTypeMessages = NotificationGroupTypeMessages::class;
    case notificationGroupTypeMentions = NotificationGroupTypeMentions::class;
    case notificationGroupTypeSecretChat = NotificationGroupTypeSecretChat::class;
    case notificationGroupTypeCalls = NotificationGroupTypeCalls::class;
    case notificationSound = NotificationSound::class;
    case notificationSounds = NotificationSounds::class;
    case notification = Notification::class;
    case notificationGroup = NotificationGroup::class;
    case optionValueBoolean = OptionValueBoolean::class;
    case optionValueEmpty = OptionValueEmpty::class;
    case optionValueInteger = OptionValueInteger::class;
    case optionValueString = OptionValueString::class;
    case jsonObjectMember = JsonObjectMember::class;
    case jsonValueNull = JsonValueNull::class;
    case jsonValueBoolean = JsonValueBoolean::class;
    case jsonValueNumber = JsonValueNumber::class;
    case jsonValueString = JsonValueString::class;
    case jsonValueArray = JsonValueArray::class;
    case jsonValueObject = JsonValueObject::class;
    case storyPrivacySettingsEveryone = StoryPrivacySettingsEveryone::class;
    case storyPrivacySettingsContacts = StoryPrivacySettingsContacts::class;
    case storyPrivacySettingsCloseFriends = StoryPrivacySettingsCloseFriends::class;
    case storyPrivacySettingsSelectedUsers = StoryPrivacySettingsSelectedUsers::class;
    case userPrivacySettingRuleAllowAll = UserPrivacySettingRuleAllowAll::class;
    case userPrivacySettingRuleAllowContacts = UserPrivacySettingRuleAllowContacts::class;
    case userPrivacySettingRuleAllowBots = UserPrivacySettingRuleAllowBots::class;
    case userPrivacySettingRuleAllowPremiumUsers = UserPrivacySettingRuleAllowPremiumUsers::class;
    case userPrivacySettingRuleAllowUsers = UserPrivacySettingRuleAllowUsers::class;
    case userPrivacySettingRuleAllowChatMembers = UserPrivacySettingRuleAllowChatMembers::class;
    case userPrivacySettingRuleRestrictAll = UserPrivacySettingRuleRestrictAll::class;
    case userPrivacySettingRuleRestrictContacts = UserPrivacySettingRuleRestrictContacts::class;
    case userPrivacySettingRuleRestrictBots = UserPrivacySettingRuleRestrictBots::class;
    case userPrivacySettingRuleRestrictUsers = UserPrivacySettingRuleRestrictUsers::class;
    case userPrivacySettingRuleRestrictChatMembers = UserPrivacySettingRuleRestrictChatMembers::class;
    case userPrivacySettingRules = UserPrivacySettingRules::class;
    case userPrivacySettingShowStatus = UserPrivacySettingShowStatus::class;
    case userPrivacySettingShowProfilePhoto = UserPrivacySettingShowProfilePhoto::class;
    case userPrivacySettingShowLinkInForwardedMessages = UserPrivacySettingShowLinkInForwardedMessages::class;
    case userPrivacySettingShowPhoneNumber = UserPrivacySettingShowPhoneNumber::class;
    case userPrivacySettingShowBio = UserPrivacySettingShowBio::class;
    case userPrivacySettingShowBirthdate = UserPrivacySettingShowBirthdate::class;
    case userPrivacySettingAllowChatInvites = UserPrivacySettingAllowChatInvites::class;
    case userPrivacySettingAllowCalls = UserPrivacySettingAllowCalls::class;
    case userPrivacySettingAllowPeerToPeerCalls = UserPrivacySettingAllowPeerToPeerCalls::class;
    case userPrivacySettingAllowFindingByPhoneNumber = UserPrivacySettingAllowFindingByPhoneNumber::class;
    case userPrivacySettingAllowPrivateVoiceAndVideoNoteMessages = UserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages::class;
    case userPrivacySettingAutosaveGifts = UserPrivacySettingAutosaveGifts::class;
    case userPrivacySettingAllowUnpaidMessages = UserPrivacySettingAllowUnpaidMessages::class;
    case readDatePrivacySettings = ReadDatePrivacySettings::class;
    case newChatPrivacySettings = NewChatPrivacySettings::class;
    case canSendMessageToUserResultOk = CanSendMessageToUserResultOk::class;
    case canSendMessageToUserResultUserHasPaidMessages = CanSendMessageToUserResultUserHasPaidMessages::class;
    case canSendMessageToUserResultUserIsDeleted = CanSendMessageToUserResultUserIsDeleted::class;
    case canSendMessageToUserResultUserRestrictsNewChats = CanSendMessageToUserResultUserRestrictsNewChats::class;
    case accountTtl = AccountTtl::class;
    case messageAutoDeleteTime = MessageAutoDeleteTime::class;
    case sessionTypeAndroid = SessionTypeAndroid::class;
    case sessionTypeApple = SessionTypeApple::class;
    case sessionTypeBrave = SessionTypeBrave::class;
    case sessionTypeChrome = SessionTypeChrome::class;
    case sessionTypeEdge = SessionTypeEdge::class;
    case sessionTypeFirefox = SessionTypeFirefox::class;
    case sessionTypeIpad = SessionTypeIpad::class;
    case sessionTypeIphone = SessionTypeIphone::class;
    case sessionTypeLinux = SessionTypeLinux::class;
    case sessionTypeMac = SessionTypeMac::class;
    case sessionTypeOpera = SessionTypeOpera::class;
    case sessionTypeSafari = SessionTypeSafari::class;
    case sessionTypeUbuntu = SessionTypeUbuntu::class;
    case sessionTypeUnknown = SessionTypeUnknown::class;
    case sessionTypeVivaldi = SessionTypeVivaldi::class;
    case sessionTypeWindows = SessionTypeWindows::class;
    case sessionTypeXbox = SessionTypeXbox::class;
    case session = Session::class;
    case sessions = Sessions::class;
    case unconfirmedSession = UnconfirmedSession::class;
    case connectedWebsite = ConnectedWebsite::class;
    case connectedWebsites = ConnectedWebsites::class;
    case reportReasonSpam = ReportReasonSpam::class;
    case reportReasonViolence = ReportReasonViolence::class;
    case reportReasonPornography = ReportReasonPornography::class;
    case reportReasonChildAbuse = ReportReasonChildAbuse::class;
    case reportReasonCopyright = ReportReasonCopyright::class;
    case reportReasonUnrelatedLocation = ReportReasonUnrelatedLocation::class;
    case reportReasonFake = ReportReasonFake::class;
    case reportReasonIllegalDrugs = ReportReasonIllegalDrugs::class;
    case reportReasonPersonalDetails = ReportReasonPersonalDetails::class;
    case reportReasonCustom = ReportReasonCustom::class;
    case reportChatResultOk = ReportChatResultOk::class;
    case reportChatResultOptionRequired = ReportChatResultOptionRequired::class;
    case reportChatResultTextRequired = ReportChatResultTextRequired::class;
    case reportChatResultMessagesRequired = ReportChatResultMessagesRequired::class;
    case reportStoryResultOk = ReportStoryResultOk::class;
    case reportStoryResultOptionRequired = ReportStoryResultOptionRequired::class;
    case reportStoryResultTextRequired = ReportStoryResultTextRequired::class;
    case internalLinkTypeActiveSessions = InternalLinkTypeActiveSessions::class;
    case internalLinkTypeAttachmentMenuBot = InternalLinkTypeAttachmentMenuBot::class;
    case internalLinkTypeAuthenticationCode = InternalLinkTypeAuthenticationCode::class;
    case internalLinkTypeBackground = InternalLinkTypeBackground::class;
    case internalLinkTypeBotAddToChannel = InternalLinkTypeBotAddToChannel::class;
    case internalLinkTypeBotStart = InternalLinkTypeBotStart::class;
    case internalLinkTypeBotStartInGroup = InternalLinkTypeBotStartInGroup::class;
    case internalLinkTypeBusinessChat = InternalLinkTypeBusinessChat::class;
    case internalLinkTypeBuyStars = InternalLinkTypeBuyStars::class;
    case internalLinkTypeChangePhoneNumber = InternalLinkTypeChangePhoneNumber::class;
    case internalLinkTypeChatAffiliateProgram = InternalLinkTypeChatAffiliateProgram::class;
    case internalLinkTypeChatBoost = InternalLinkTypeChatBoost::class;
    case internalLinkTypeChatFolderInvite = InternalLinkTypeChatFolderInvite::class;
    case internalLinkTypeChatFolderSettings = InternalLinkTypeChatFolderSettings::class;
    case internalLinkTypeChatInvite = InternalLinkTypeChatInvite::class;
    case internalLinkTypeDefaultMessageAutoDeleteTimerSettings = InternalLinkTypeDefaultMessageAutoDeleteTimerSettings::class;
    case internalLinkTypeEditProfileSettings = InternalLinkTypeEditProfileSettings::class;
    case internalLinkTypeGame = InternalLinkTypeGame::class;
    case internalLinkTypeGroupCall = InternalLinkTypeGroupCall::class;
    case internalLinkTypeInstantView = InternalLinkTypeInstantView::class;
    case internalLinkTypeInvoice = InternalLinkTypeInvoice::class;
    case internalLinkTypeLanguagePack = InternalLinkTypeLanguagePack::class;
    case internalLinkTypeLanguageSettings = InternalLinkTypeLanguageSettings::class;
    case internalLinkTypeMainWebApp = InternalLinkTypeMainWebApp::class;
    case internalLinkTypeMessage = InternalLinkTypeMessage::class;
    case internalLinkTypeMessageDraft = InternalLinkTypeMessageDraft::class;
    case internalLinkTypeMyStars = InternalLinkTypeMyStars::class;
    case internalLinkTypePassportDataRequest = InternalLinkTypePassportDataRequest::class;
    case internalLinkTypePhoneNumberConfirmation = InternalLinkTypePhoneNumberConfirmation::class;
    case internalLinkTypePremiumFeatures = InternalLinkTypePremiumFeatures::class;
    case internalLinkTypePremiumGift = InternalLinkTypePremiumGift::class;
    case internalLinkTypePremiumGiftCode = InternalLinkTypePremiumGiftCode::class;
    case internalLinkTypePrivacyAndSecuritySettings = InternalLinkTypePrivacyAndSecuritySettings::class;
    case internalLinkTypeProxy = InternalLinkTypeProxy::class;
    case internalLinkTypePublicChat = InternalLinkTypePublicChat::class;
    case internalLinkTypeQrCodeAuthentication = InternalLinkTypeQrCodeAuthentication::class;
    case internalLinkTypeRestorePurchases = InternalLinkTypeRestorePurchases::class;
    case internalLinkTypeSettings = InternalLinkTypeSettings::class;
    case internalLinkTypeStickerSet = InternalLinkTypeStickerSet::class;
    case internalLinkTypeStory = InternalLinkTypeStory::class;
    case internalLinkTypeTheme = InternalLinkTypeTheme::class;
    case internalLinkTypeThemeSettings = InternalLinkTypeThemeSettings::class;
    case internalLinkTypeUnknownDeepLink = InternalLinkTypeUnknownDeepLink::class;
    case internalLinkTypeUnsupportedProxy = InternalLinkTypeUnsupportedProxy::class;
    case internalLinkTypeUpgradedGift = InternalLinkTypeUpgradedGift::class;
    case internalLinkTypeUserPhoneNumber = InternalLinkTypeUserPhoneNumber::class;
    case internalLinkTypeUserToken = InternalLinkTypeUserToken::class;
    case internalLinkTypeVideoChat = InternalLinkTypeVideoChat::class;
    case internalLinkTypeWebApp = InternalLinkTypeWebApp::class;
    case messageLink = MessageLink::class;
    case messageLinkInfo = MessageLinkInfo::class;
    case chatBoostLink = ChatBoostLink::class;
    case chatBoostLinkInfo = ChatBoostLinkInfo::class;
    case blockListMain = BlockListMain::class;
    case blockListStories = BlockListStories::class;
    case fileTypeNone = FileTypeNone::class;
    case fileTypeAnimation = FileTypeAnimation::class;
    case fileTypeAudio = FileTypeAudio::class;
    case fileTypeDocument = FileTypeDocument::class;
    case fileTypeNotificationSound = FileTypeNotificationSound::class;
    case fileTypePhoto = FileTypePhoto::class;
    case fileTypePhotoStory = FileTypePhotoStory::class;
    case fileTypeProfilePhoto = FileTypeProfilePhoto::class;
    case fileTypeSecret = FileTypeSecret::class;
    case fileTypeSecretThumbnail = FileTypeSecretThumbnail::class;
    case fileTypeSecure = FileTypeSecure::class;
    case fileTypeSelfDestructingPhoto = FileTypeSelfDestructingPhoto::class;
    case fileTypeSelfDestructingVideo = FileTypeSelfDestructingVideo::class;
    case fileTypeSelfDestructingVideoNote = FileTypeSelfDestructingVideoNote::class;
    case fileTypeSelfDestructingVoiceNote = FileTypeSelfDestructingVoiceNote::class;
    case fileTypeSticker = FileTypeSticker::class;
    case fileTypeThumbnail = FileTypeThumbnail::class;
    case fileTypeUnknown = FileTypeUnknown::class;
    case fileTypeVideo = FileTypeVideo::class;
    case fileTypeVideoNote = FileTypeVideoNote::class;
    case fileTypeVideoStory = FileTypeVideoStory::class;
    case fileTypeVoiceNote = FileTypeVoiceNote::class;
    case fileTypeWallpaper = FileTypeWallpaper::class;
    case storageStatisticsByFileType = StorageStatisticsByFileType::class;
    case storageStatisticsByChat = StorageStatisticsByChat::class;
    case storageStatistics = StorageStatistics::class;
    case storageStatisticsFast = StorageStatisticsFast::class;
    case databaseStatistics = DatabaseStatistics::class;
    case networkTypeNone = NetworkTypeNone::class;
    case networkTypeMobile = NetworkTypeMobile::class;
    case networkTypeMobileRoaming = NetworkTypeMobileRoaming::class;
    case networkTypeWiFi = NetworkTypeWiFi::class;
    case networkTypeOther = NetworkTypeOther::class;
    case networkStatisticsEntryFile = NetworkStatisticsEntryFile::class;
    case networkStatisticsEntryCall = NetworkStatisticsEntryCall::class;
    case networkStatistics = NetworkStatistics::class;
    case autoDownloadSettings = AutoDownloadSettings::class;
    case autoDownloadSettingsPresets = AutoDownloadSettingsPresets::class;
    case autosaveSettingsScopePrivateChats = AutosaveSettingsScopePrivateChats::class;
    case autosaveSettingsScopeGroupChats = AutosaveSettingsScopeGroupChats::class;
    case autosaveSettingsScopeChannelChats = AutosaveSettingsScopeChannelChats::class;
    case autosaveSettingsScopeChat = AutosaveSettingsScopeChat::class;
    case scopeAutosaveSettings = ScopeAutosaveSettings::class;
    case autosaveSettingsException = AutosaveSettingsException::class;
    case autosaveSettings = AutosaveSettings::class;
    case connectionStateWaitingForNetwork = ConnectionStateWaitingForNetwork::class;
    case connectionStateConnectingToProxy = ConnectionStateConnectingToProxy::class;
    case connectionStateConnecting = ConnectionStateConnecting::class;
    case connectionStateUpdating = ConnectionStateUpdating::class;
    case connectionStateReady = ConnectionStateReady::class;
    case topChatCategoryUsers = TopChatCategoryUsers::class;
    case topChatCategoryBots = TopChatCategoryBots::class;
    case topChatCategoryGroups = TopChatCategoryGroups::class;
    case topChatCategoryChannels = TopChatCategoryChannels::class;
    case topChatCategoryInlineBots = TopChatCategoryInlineBots::class;
    case topChatCategoryWebAppBots = TopChatCategoryWebAppBots::class;
    case topChatCategoryCalls = TopChatCategoryCalls::class;
    case topChatCategoryForwardChats = TopChatCategoryForwardChats::class;
    case foundPosition = FoundPosition::class;
    case foundPositions = FoundPositions::class;
    case tMeUrlTypeUser = TMeUrlTypeUser::class;
    case tMeUrlTypeSupergroup = TMeUrlTypeSupergroup::class;
    case tMeUrlTypeChatInvite = TMeUrlTypeChatInvite::class;
    case tMeUrlTypeStickerSet = TMeUrlTypeStickerSet::class;
    case tMeUrl = TMeUrl::class;
    case tMeUrls = TMeUrls::class;
    case suggestedActionEnableArchiveAndMuteNewChats = SuggestedActionEnableArchiveAndMuteNewChats::class;
    case suggestedActionCheckPassword = SuggestedActionCheckPassword::class;
    case suggestedActionCheckPhoneNumber = SuggestedActionCheckPhoneNumber::class;
    case suggestedActionViewChecksHint = SuggestedActionViewChecksHint::class;
    case suggestedActionConvertToBroadcastGroup = SuggestedActionConvertToBroadcastGroup::class;
    case suggestedActionSetPassword = SuggestedActionSetPassword::class;
    case suggestedActionUpgradePremium = SuggestedActionUpgradePremium::class;
    case suggestedActionRestorePremium = SuggestedActionRestorePremium::class;
    case suggestedActionSubscribeToAnnualPremium = SuggestedActionSubscribeToAnnualPremium::class;
    case suggestedActionGiftPremiumForChristmas = SuggestedActionGiftPremiumForChristmas::class;
    case suggestedActionSetBirthdate = SuggestedActionSetBirthdate::class;
    case suggestedActionSetProfilePhoto = SuggestedActionSetProfilePhoto::class;
    case suggestedActionExtendPremium = SuggestedActionExtendPremium::class;
    case suggestedActionExtendStarSubscriptions = SuggestedActionExtendStarSubscriptions::class;
    case suggestedActionCustom = SuggestedActionCustom::class;
    case count = Count::class;
    case text = Text::class;
    case data = Data::class;
    case seconds = Seconds::class;
    case fileDownloadedPrefixSize = FileDownloadedPrefixSize::class;
    case starCount = StarCount::class;
    case deepLinkInfo = DeepLinkInfo::class;
    case textParseModeMarkdown = TextParseModeMarkdown::class;
    case textParseModeHTML = TextParseModeHTML::class;
    case proxyTypeSocks5 = ProxyTypeSocks5::class;
    case proxyTypeHttp = ProxyTypeHttp::class;
    case proxyTypeMtproto = ProxyTypeMtproto::class;
    case proxy = Proxy::class;
    case proxies = Proxies::class;
    case inputSticker = InputSticker::class;
    case dateRange = DateRange::class;
    case statisticalValue = StatisticalValue::class;
    case statisticalGraphData = StatisticalGraphData::class;
    case statisticalGraphAsync = StatisticalGraphAsync::class;
    case statisticalGraphError = StatisticalGraphError::class;
    case chatStatisticsObjectTypeMessage = ChatStatisticsObjectTypeMessage::class;
    case chatStatisticsObjectTypeStory = ChatStatisticsObjectTypeStory::class;
    case chatStatisticsInteractionInfo = ChatStatisticsInteractionInfo::class;
    case chatStatisticsMessageSenderInfo = ChatStatisticsMessageSenderInfo::class;
    case chatStatisticsAdministratorActionsInfo = ChatStatisticsAdministratorActionsInfo::class;
    case chatStatisticsInviterInfo = ChatStatisticsInviterInfo::class;
    case chatStatisticsSupergroup = ChatStatisticsSupergroup::class;
    case chatStatisticsChannel = ChatStatisticsChannel::class;
    case chatRevenueAmount = ChatRevenueAmount::class;
    case chatRevenueStatistics = ChatRevenueStatistics::class;
    case messageStatistics = MessageStatistics::class;
    case storyStatistics = StoryStatistics::class;
    case revenueWithdrawalStatePending = RevenueWithdrawalStatePending::class;
    case revenueWithdrawalStateSucceeded = RevenueWithdrawalStateSucceeded::class;
    case revenueWithdrawalStateFailed = RevenueWithdrawalStateFailed::class;
    case chatRevenueTransactionTypeEarnings = ChatRevenueTransactionTypeEarnings::class;
    case chatRevenueTransactionTypeWithdrawal = ChatRevenueTransactionTypeWithdrawal::class;
    case chatRevenueTransactionTypeRefund = ChatRevenueTransactionTypeRefund::class;
    case chatRevenueTransaction = ChatRevenueTransaction::class;
    case chatRevenueTransactions = ChatRevenueTransactions::class;
    case starRevenueStatus = StarRevenueStatus::class;
    case starRevenueStatistics = StarRevenueStatistics::class;
    case point = Point::class;
    case vectorPathCommandLine = VectorPathCommandLine::class;
    case vectorPathCommandCubicBezierCurve = VectorPathCommandCubicBezierCurve::class;
    case botCommandScopeDefault = BotCommandScopeDefault::class;
    case botCommandScopeAllPrivateChats = BotCommandScopeAllPrivateChats::class;
    case botCommandScopeAllGroupChats = BotCommandScopeAllGroupChats::class;
    case botCommandScopeAllChatAdministrators = BotCommandScopeAllChatAdministrators::class;
    case botCommandScopeChat = BotCommandScopeChat::class;
    case botCommandScopeChatAdministrators = BotCommandScopeChatAdministrators::class;
    case botCommandScopeChatMember = BotCommandScopeChatMember::class;
    case phoneNumberCodeTypeChange = PhoneNumberCodeTypeChange::class;
    case phoneNumberCodeTypeVerify = PhoneNumberCodeTypeVerify::class;
    case phoneNumberCodeTypeConfirmOwnership = PhoneNumberCodeTypeConfirmOwnership::class;
    case updateAuthorizationState = UpdateAuthorizationState::class;
    case updateNewMessage = UpdateNewMessage::class;
    case updateMessageSendAcknowledged = UpdateMessageSendAcknowledged::class;
    case updateMessageSendSucceeded = UpdateMessageSendSucceeded::class;
    case updateMessageSendFailed = UpdateMessageSendFailed::class;
    case updateMessageContent = UpdateMessageContent::class;
    case updateMessageEdited = UpdateMessageEdited::class;
    case updateMessageIsPinned = UpdateMessageIsPinned::class;
    case updateMessageInteractionInfo = UpdateMessageInteractionInfo::class;
    case updateMessageContentOpened = UpdateMessageContentOpened::class;
    case updateMessageMentionRead = UpdateMessageMentionRead::class;
    case updateMessageUnreadReactions = UpdateMessageUnreadReactions::class;
    case updateMessageFactCheck = UpdateMessageFactCheck::class;
    case updateMessageLiveLocationViewed = UpdateMessageLiveLocationViewed::class;
    case updateVideoPublished = UpdateVideoPublished::class;
    case updateNewChat = UpdateNewChat::class;
    case updateChatTitle = UpdateChatTitle::class;
    case updateChatPhoto = UpdateChatPhoto::class;
    case updateChatAccentColors = UpdateChatAccentColors::class;
    case updateChatPermissions = UpdateChatPermissions::class;
    case updateChatLastMessage = UpdateChatLastMessage::class;
    case updateChatPosition = UpdateChatPosition::class;
    case updateChatAddedToList = UpdateChatAddedToList::class;
    case updateChatRemovedFromList = UpdateChatRemovedFromList::class;
    case updateChatReadInbox = UpdateChatReadInbox::class;
    case updateChatReadOutbox = UpdateChatReadOutbox::class;
    case updateChatActionBar = UpdateChatActionBar::class;
    case updateChatBusinessBotManageBar = UpdateChatBusinessBotManageBar::class;
    case updateChatAvailableReactions = UpdateChatAvailableReactions::class;
    case updateChatDraftMessage = UpdateChatDraftMessage::class;
    case updateChatEmojiStatus = UpdateChatEmojiStatus::class;
    case updateChatMessageSender = UpdateChatMessageSender::class;
    case updateChatMessageAutoDeleteTime = UpdateChatMessageAutoDeleteTime::class;
    case updateChatNotificationSettings = UpdateChatNotificationSettings::class;
    case updateChatPendingJoinRequests = UpdateChatPendingJoinRequests::class;
    case updateChatReplyMarkup = UpdateChatReplyMarkup::class;
    case updateChatBackground = UpdateChatBackground::class;
    case updateChatTheme = UpdateChatTheme::class;
    case updateChatUnreadMentionCount = UpdateChatUnreadMentionCount::class;
    case updateChatUnreadReactionCount = UpdateChatUnreadReactionCount::class;
    case updateChatVideoChat = UpdateChatVideoChat::class;
    case updateChatDefaultDisableNotification = UpdateChatDefaultDisableNotification::class;
    case updateChatHasProtectedContent = UpdateChatHasProtectedContent::class;
    case updateChatIsTranslatable = UpdateChatIsTranslatable::class;
    case updateChatIsMarkedAsUnread = UpdateChatIsMarkedAsUnread::class;
    case updateChatViewAsTopics = UpdateChatViewAsTopics::class;
    case updateChatBlockList = UpdateChatBlockList::class;
    case updateChatHasScheduledMessages = UpdateChatHasScheduledMessages::class;
    case updateChatFolders = UpdateChatFolders::class;
    case updateChatOnlineMemberCount = UpdateChatOnlineMemberCount::class;
    case updateSavedMessagesTopic = UpdateSavedMessagesTopic::class;
    case updateSavedMessagesTopicCount = UpdateSavedMessagesTopicCount::class;
    case updateDirectMessagesChatTopic = UpdateDirectMessagesChatTopic::class;
    case updateTopicMessageCount = UpdateTopicMessageCount::class;
    case updateQuickReplyShortcut = UpdateQuickReplyShortcut::class;
    case updateQuickReplyShortcutDeleted = UpdateQuickReplyShortcutDeleted::class;
    case updateQuickReplyShortcuts = UpdateQuickReplyShortcuts::class;
    case updateQuickReplyShortcutMessages = UpdateQuickReplyShortcutMessages::class;
    case updateForumTopicInfo = UpdateForumTopicInfo::class;
    case updateForumTopic = UpdateForumTopic::class;
    case updateScopeNotificationSettings = UpdateScopeNotificationSettings::class;
    case updateReactionNotificationSettings = UpdateReactionNotificationSettings::class;
    case updateNotification = UpdateNotification::class;
    case updateNotificationGroup = UpdateNotificationGroup::class;
    case updateActiveNotifications = UpdateActiveNotifications::class;
    case updateHavePendingNotifications = UpdateHavePendingNotifications::class;
    case updateDeleteMessages = UpdateDeleteMessages::class;
    case updateChatAction = UpdateChatAction::class;
    case updateUserStatus = UpdateUserStatus::class;
    case updateUser = UpdateUser::class;
    case updateBasicGroup = UpdateBasicGroup::class;
    case updateSupergroup = UpdateSupergroup::class;
    case updateSecretChat = UpdateSecretChat::class;
    case updateUserFullInfo = UpdateUserFullInfo::class;
    case updateBasicGroupFullInfo = UpdateBasicGroupFullInfo::class;
    case updateSupergroupFullInfo = UpdateSupergroupFullInfo::class;
    case updateServiceNotification = UpdateServiceNotification::class;
    case updateFile = UpdateFile::class;
    case updateFileGenerationStart = UpdateFileGenerationStart::class;
    case updateFileGenerationStop = UpdateFileGenerationStop::class;
    case updateFileDownloads = UpdateFileDownloads::class;
    case updateFileAddedToDownloads = UpdateFileAddedToDownloads::class;
    case updateFileDownload = UpdateFileDownload::class;
    case updateFileRemovedFromDownloads = UpdateFileRemovedFromDownloads::class;
    case updateApplicationVerificationRequired = UpdateApplicationVerificationRequired::class;
    case updateApplicationRecaptchaVerificationRequired = UpdateApplicationRecaptchaVerificationRequired::class;
    case updateCall = UpdateCall::class;
    case updateGroupCall = UpdateGroupCall::class;
    case updateGroupCallParticipant = UpdateGroupCallParticipant::class;
    case updateGroupCallParticipants = UpdateGroupCallParticipants::class;
    case updateGroupCallVerificationState = UpdateGroupCallVerificationState::class;
    case updateNewCallSignalingData = UpdateNewCallSignalingData::class;
    case updateUserPrivacySettingRules = UpdateUserPrivacySettingRules::class;
    case updateUnreadMessageCount = UpdateUnreadMessageCount::class;
    case updateUnreadChatCount = UpdateUnreadChatCount::class;
    case updateStory = UpdateStory::class;
    case updateStoryDeleted = UpdateStoryDeleted::class;
    case updateStoryPostSucceeded = UpdateStoryPostSucceeded::class;
    case updateStoryPostFailed = UpdateStoryPostFailed::class;
    case updateChatActiveStories = UpdateChatActiveStories::class;
    case updateStoryListChatCount = UpdateStoryListChatCount::class;
    case updateStoryStealthMode = UpdateStoryStealthMode::class;
    case updateOption = UpdateOption::class;
    case updateStickerSet = UpdateStickerSet::class;
    case updateInstalledStickerSets = UpdateInstalledStickerSets::class;
    case updateTrendingStickerSets = UpdateTrendingStickerSets::class;
    case updateRecentStickers = UpdateRecentStickers::class;
    case updateFavoriteStickers = UpdateFavoriteStickers::class;
    case updateSavedAnimations = UpdateSavedAnimations::class;
    case updateSavedNotificationSounds = UpdateSavedNotificationSounds::class;
    case updateDefaultBackground = UpdateDefaultBackground::class;
    case updateChatThemes = UpdateChatThemes::class;
    case updateAccentColors = UpdateAccentColors::class;
    case updateProfileAccentColors = UpdateProfileAccentColors::class;
    case updateLanguagePackStrings = UpdateLanguagePackStrings::class;
    case updateConnectionState = UpdateConnectionState::class;
    case updateFreezeState = UpdateFreezeState::class;
    case updateTermsOfService = UpdateTermsOfService::class;
    case updateUnconfirmedSession = UpdateUnconfirmedSession::class;
    case updateAttachmentMenuBots = UpdateAttachmentMenuBots::class;
    case updateWebAppMessageSent = UpdateWebAppMessageSent::class;
    case updateActiveEmojiReactions = UpdateActiveEmojiReactions::class;
    case updateAvailableMessageEffects = UpdateAvailableMessageEffects::class;
    case updateDefaultReactionType = UpdateDefaultReactionType::class;
    case updateDefaultPaidReactionType = UpdateDefaultPaidReactionType::class;
    case updateSavedMessagesTags = UpdateSavedMessagesTags::class;
    case updateActiveLiveLocationMessages = UpdateActiveLiveLocationMessages::class;
    case updateOwnedStarCount = UpdateOwnedStarCount::class;
    case updateChatRevenueAmount = UpdateChatRevenueAmount::class;
    case updateStarRevenueStatus = UpdateStarRevenueStatus::class;
    case updateSpeechRecognitionTrial = UpdateSpeechRecognitionTrial::class;
    case updateDiceEmojis = UpdateDiceEmojis::class;
    case updateAnimatedEmojiMessageClicked = UpdateAnimatedEmojiMessageClicked::class;
    case updateAnimationSearchParameters = UpdateAnimationSearchParameters::class;
    case updateSuggestedActions = UpdateSuggestedActions::class;
    case updateSpeedLimitNotification = UpdateSpeedLimitNotification::class;
    case updateContactCloseBirthdays = UpdateContactCloseBirthdays::class;
    case updateAutosaveSettings = UpdateAutosaveSettings::class;
    case updateBusinessConnection = UpdateBusinessConnection::class;
    case updateNewBusinessMessage = UpdateNewBusinessMessage::class;
    case updateBusinessMessageEdited = UpdateBusinessMessageEdited::class;
    case updateBusinessMessagesDeleted = UpdateBusinessMessagesDeleted::class;
    case updateNewInlineQuery = UpdateNewInlineQuery::class;
    case updateNewChosenInlineResult = UpdateNewChosenInlineResult::class;
    case updateNewCallbackQuery = UpdateNewCallbackQuery::class;
    case updateNewInlineCallbackQuery = UpdateNewInlineCallbackQuery::class;
    case updateNewBusinessCallbackQuery = UpdateNewBusinessCallbackQuery::class;
    case updateNewShippingQuery = UpdateNewShippingQuery::class;
    case updateNewPreCheckoutQuery = UpdateNewPreCheckoutQuery::class;
    case updateNewCustomEvent = UpdateNewCustomEvent::class;
    case updateNewCustomQuery = UpdateNewCustomQuery::class;
    case updatePoll = UpdatePoll::class;
    case updatePollAnswer = UpdatePollAnswer::class;
    case updateChatMember = UpdateChatMember::class;
    case updateNewChatJoinRequest = UpdateNewChatJoinRequest::class;
    case updateChatBoost = UpdateChatBoost::class;
    case updateMessageReaction = UpdateMessageReaction::class;
    case updateMessageReactions = UpdateMessageReactions::class;
    case updatePaidMediaPurchased = UpdatePaidMediaPurchased::class;
    case updates = Updates::class;
    case logStreamDefault = LogStreamDefault::class;
    case logStreamFile = LogStreamFile::class;
    case logStreamEmpty = LogStreamEmpty::class;
    case logVerbosityLevel = LogVerbosityLevel::class;
    case logTags = LogTags::class;
    case userSupportInfo = UserSupportInfo::class;
    case testInt = TestInt::class;
    case testString = TestString::class;
    case testBytes = TestBytes::class;
    case testVectorInt = TestVectorInt::class;
    case testVectorIntObject = TestVectorIntObject::class;
    case testVectorString = TestVectorString::class;
    case testVectorStringObject = TestVectorStringObject::class;
    case getAuthorizationState = GetAuthorizationState::class;
    case setTdlibParameters = SetTdlibParameters::class;
    case setAuthenticationPhoneNumber = SetAuthenticationPhoneNumber::class;
    case checkAuthenticationPremiumPurchase = CheckAuthenticationPremiumPurchase::class;
    case setAuthenticationPremiumPurchaseTransaction = SetAuthenticationPremiumPurchaseTransaction::class;
    case setAuthenticationEmailAddress = SetAuthenticationEmailAddress::class;
    case resendAuthenticationCode = ResendAuthenticationCode::class;
    case checkAuthenticationEmailCode = CheckAuthenticationEmailCode::class;
    case checkAuthenticationCode = CheckAuthenticationCode::class;
    case requestQrCodeAuthentication = RequestQrCodeAuthentication::class;
    case registerUser = RegisterUser::class;
    case resetAuthenticationEmailAddress = ResetAuthenticationEmailAddress::class;
    case checkAuthenticationPassword = CheckAuthenticationPassword::class;
    case requestAuthenticationPasswordRecovery = RequestAuthenticationPasswordRecovery::class;
    case checkAuthenticationPasswordRecoveryCode = CheckAuthenticationPasswordRecoveryCode::class;
    case recoverAuthenticationPassword = RecoverAuthenticationPassword::class;
    case sendAuthenticationFirebaseSms = SendAuthenticationFirebaseSms::class;
    case reportAuthenticationCodeMissing = ReportAuthenticationCodeMissing::class;
    case checkAuthenticationBotToken = CheckAuthenticationBotToken::class;
    case logOut = LogOut::class;
    case close = Close::class;
    case destroy = Destroy::class;
    case confirmQrCodeAuthentication = ConfirmQrCodeAuthentication::class;
    case getCurrentState = GetCurrentState::class;
    case setDatabaseEncryptionKey = SetDatabaseEncryptionKey::class;
    case getPasswordState = GetPasswordState::class;
    case setPassword = SetPassword::class;
    case setLoginEmailAddress = SetLoginEmailAddress::class;
    case resendLoginEmailAddressCode = ResendLoginEmailAddressCode::class;
    case checkLoginEmailAddressCode = CheckLoginEmailAddressCode::class;
    case getRecoveryEmailAddress = GetRecoveryEmailAddress::class;
    case setRecoveryEmailAddress = SetRecoveryEmailAddress::class;
    case checkRecoveryEmailAddressCode = CheckRecoveryEmailAddressCode::class;
    case resendRecoveryEmailAddressCode = ResendRecoveryEmailAddressCode::class;
    case cancelRecoveryEmailAddressVerification = CancelRecoveryEmailAddressVerification::class;
    case requestPasswordRecovery = RequestPasswordRecovery::class;
    case checkPasswordRecoveryCode = CheckPasswordRecoveryCode::class;
    case recoverPassword = RecoverPassword::class;
    case resetPassword = ResetPassword::class;
    case cancelPasswordReset = CancelPasswordReset::class;
    case createTemporaryPassword = CreateTemporaryPassword::class;
    case getTemporaryPasswordState = GetTemporaryPasswordState::class;
    case getMe = GetMe::class;
    case getUser = GetUser::class;
    case getUserFullInfo = GetUserFullInfo::class;
    case getBasicGroup = GetBasicGroup::class;
    case getBasicGroupFullInfo = GetBasicGroupFullInfo::class;
    case getSupergroup = GetSupergroup::class;
    case getSupergroupFullInfo = GetSupergroupFullInfo::class;
    case getSecretChat = GetSecretChat::class;
    case getChat = GetChat::class;
    case getMessage = GetMessage::class;
    case getMessageLocally = GetMessageLocally::class;
    case getRepliedMessage = GetRepliedMessage::class;
    case getChatPinnedMessage = GetChatPinnedMessage::class;
    case getCallbackQueryMessage = GetCallbackQueryMessage::class;
    case getMessages = GetMessages::class;
    case getMessageProperties = GetMessageProperties::class;
    case getMessageThread = GetMessageThread::class;
    case getMessageReadDate = GetMessageReadDate::class;
    case getMessageViewers = GetMessageViewers::class;
    case getMessageAuthor = GetMessageAuthor::class;
    case getFile = GetFile::class;
    case getRemoteFile = GetRemoteFile::class;
    case loadChats = LoadChats::class;
    case getChats = GetChats::class;
    case searchPublicChat = SearchPublicChat::class;
    case searchPublicChats = SearchPublicChats::class;
    case searchChats = SearchChats::class;
    case searchChatsOnServer = SearchChatsOnServer::class;
    case getRecommendedChats = GetRecommendedChats::class;
    case getChatSimilarChats = GetChatSimilarChats::class;
    case getChatSimilarChatCount = GetChatSimilarChatCount::class;
    case openChatSimilarChat = OpenChatSimilarChat::class;
    case getBotSimilarBots = GetBotSimilarBots::class;
    case getBotSimilarBotCount = GetBotSimilarBotCount::class;
    case openBotSimilarBot = OpenBotSimilarBot::class;
    case getTopChats = GetTopChats::class;
    case removeTopChat = RemoveTopChat::class;
    case searchRecentlyFoundChats = SearchRecentlyFoundChats::class;
    case addRecentlyFoundChat = AddRecentlyFoundChat::class;
    case removeRecentlyFoundChat = RemoveRecentlyFoundChat::class;
    case clearRecentlyFoundChats = ClearRecentlyFoundChats::class;
    case getRecentlyOpenedChats = GetRecentlyOpenedChats::class;
    case checkChatUsername = CheckChatUsername::class;
    case getCreatedPublicChats = GetCreatedPublicChats::class;
    case checkCreatedPublicChatsLimit = CheckCreatedPublicChatsLimit::class;
    case getSuitableDiscussionChats = GetSuitableDiscussionChats::class;
    case getInactiveSupergroupChats = GetInactiveSupergroupChats::class;
    case getSuitablePersonalChats = GetSuitablePersonalChats::class;
    case loadDirectMessagesChatTopics = LoadDirectMessagesChatTopics::class;
    case getDirectMessagesChatTopic = GetDirectMessagesChatTopic::class;
    case getDirectMessagesChatTopicHistory = GetDirectMessagesChatTopicHistory::class;
    case getDirectMessagesChatTopicMessageByDate = GetDirectMessagesChatTopicMessageByDate::class;
    case deleteDirectMessagesChatTopicHistory = DeleteDirectMessagesChatTopicHistory::class;
    case deleteDirectMessagesChatTopicMessagesByDate = DeleteDirectMessagesChatTopicMessagesByDate::class;
    case setDirectMessagesChatTopicIsMarkedAsUnread = SetDirectMessagesChatTopicIsMarkedAsUnread::class;
    case setDirectMessagesChatTopicDraftMessage = SetDirectMessagesChatTopicDraftMessage::class;
    case unpinAllDirectMessagesChatTopicMessages = UnpinAllDirectMessagesChatTopicMessages::class;
    case readAllDirectMessagesChatTopicReactions = ReadAllDirectMessagesChatTopicReactions::class;
    case getDirectMessagesChatTopicRevenue = GetDirectMessagesChatTopicRevenue::class;
    case toggleDirectMessagesChatTopicCanSendUnpaidMessages = ToggleDirectMessagesChatTopicCanSendUnpaidMessages::class;
    case loadSavedMessagesTopics = LoadSavedMessagesTopics::class;
    case getSavedMessagesTopicHistory = GetSavedMessagesTopicHistory::class;
    case getSavedMessagesTopicMessageByDate = GetSavedMessagesTopicMessageByDate::class;
    case deleteSavedMessagesTopicHistory = DeleteSavedMessagesTopicHistory::class;
    case deleteSavedMessagesTopicMessagesByDate = DeleteSavedMessagesTopicMessagesByDate::class;
    case toggleSavedMessagesTopicIsPinned = ToggleSavedMessagesTopicIsPinned::class;
    case setPinnedSavedMessagesTopics = SetPinnedSavedMessagesTopics::class;
    case getGroupsInCommon = GetGroupsInCommon::class;
    case getChatHistory = GetChatHistory::class;
    case getMessageThreadHistory = GetMessageThreadHistory::class;
    case deleteChatHistory = DeleteChatHistory::class;
    case deleteChat = DeleteChat::class;
    case searchChatMessages = SearchChatMessages::class;
    case searchMessages = SearchMessages::class;
    case searchSecretMessages = SearchSecretMessages::class;
    case searchSavedMessages = SearchSavedMessages::class;
    case searchCallMessages = SearchCallMessages::class;
    case searchOutgoingDocumentMessages = SearchOutgoingDocumentMessages::class;
    case searchPublicMessagesByTag = SearchPublicMessagesByTag::class;
    case searchPublicStoriesByTag = SearchPublicStoriesByTag::class;
    case searchPublicStoriesByLocation = SearchPublicStoriesByLocation::class;
    case searchPublicStoriesByVenue = SearchPublicStoriesByVenue::class;
    case getSearchedForTags = GetSearchedForTags::class;
    case removeSearchedForTag = RemoveSearchedForTag::class;
    case clearSearchedForTags = ClearSearchedForTags::class;
    case deleteAllCallMessages = DeleteAllCallMessages::class;
    case searchChatRecentLocationMessages = SearchChatRecentLocationMessages::class;
    case getChatMessageByDate = GetChatMessageByDate::class;
    case getChatSparseMessagePositions = GetChatSparseMessagePositions::class;
    case getChatMessageCalendar = GetChatMessageCalendar::class;
    case getChatMessageCount = GetChatMessageCount::class;
    case getChatMessagePosition = GetChatMessagePosition::class;
    case getChatScheduledMessages = GetChatScheduledMessages::class;
    case getChatSponsoredMessages = GetChatSponsoredMessages::class;
    case clickChatSponsoredMessage = ClickChatSponsoredMessage::class;
    case reportChatSponsoredMessage = ReportChatSponsoredMessage::class;
    case getSearchSponsoredChats = GetSearchSponsoredChats::class;
    case viewSponsoredChat = ViewSponsoredChat::class;
    case openSponsoredChat = OpenSponsoredChat::class;
    case reportSponsoredChat = ReportSponsoredChat::class;
    case getVideoMessageAdvertisements = GetVideoMessageAdvertisements::class;
    case viewVideoMessageAdvertisement = ViewVideoMessageAdvertisement::class;
    case clickVideoMessageAdvertisement = ClickVideoMessageAdvertisement::class;
    case reportVideoMessageAdvertisement = ReportVideoMessageAdvertisement::class;
    case removeNotification = RemoveNotification::class;
    case removeNotificationGroup = RemoveNotificationGroup::class;
    case getMessageLink = GetMessageLink::class;
    case getMessageEmbeddingCode = GetMessageEmbeddingCode::class;
    case getMessageLinkInfo = GetMessageLinkInfo::class;
    case translateText = TranslateText::class;
    case translateMessageText = TranslateMessageText::class;
    case recognizeSpeech = RecognizeSpeech::class;
    case rateSpeechRecognition = RateSpeechRecognition::class;
    case getChatAvailableMessageSenders = GetChatAvailableMessageSenders::class;
    case setChatMessageSender = SetChatMessageSender::class;
    case sendMessage = SendMessage::class;
    case sendMessageAlbum = SendMessageAlbum::class;
    case sendBotStartMessage = SendBotStartMessage::class;
    case sendInlineQueryResultMessage = SendInlineQueryResultMessage::class;
    case forwardMessages = ForwardMessages::class;
    case sendQuickReplyShortcutMessages = SendQuickReplyShortcutMessages::class;
    case resendMessages = ResendMessages::class;
    case addLocalMessage = AddLocalMessage::class;
    case deleteMessages = DeleteMessages::class;
    case deleteChatMessagesBySender = DeleteChatMessagesBySender::class;
    case deleteChatMessagesByDate = DeleteChatMessagesByDate::class;
    case editMessageText = EditMessageText::class;
    case editMessageLiveLocation = EditMessageLiveLocation::class;
    case editMessageChecklist = EditMessageChecklist::class;
    case editMessageMedia = EditMessageMedia::class;
    case editMessageCaption = EditMessageCaption::class;
    case editMessageReplyMarkup = EditMessageReplyMarkup::class;
    case editInlineMessageText = EditInlineMessageText::class;
    case editInlineMessageLiveLocation = EditInlineMessageLiveLocation::class;
    case editInlineMessageMedia = EditInlineMessageMedia::class;
    case editInlineMessageCaption = EditInlineMessageCaption::class;
    case editInlineMessageReplyMarkup = EditInlineMessageReplyMarkup::class;
    case editMessageSchedulingState = EditMessageSchedulingState::class;
    case setMessageFactCheck = SetMessageFactCheck::class;
    case sendBusinessMessage = SendBusinessMessage::class;
    case sendBusinessMessageAlbum = SendBusinessMessageAlbum::class;
    case editBusinessMessageText = EditBusinessMessageText::class;
    case editBusinessMessageLiveLocation = EditBusinessMessageLiveLocation::class;
    case editBusinessMessageChecklist = EditBusinessMessageChecklist::class;
    case editBusinessMessageMedia = EditBusinessMessageMedia::class;
    case editBusinessMessageCaption = EditBusinessMessageCaption::class;
    case editBusinessMessageReplyMarkup = EditBusinessMessageReplyMarkup::class;
    case stopBusinessPoll = StopBusinessPoll::class;
    case setBusinessMessageIsPinned = SetBusinessMessageIsPinned::class;
    case readBusinessMessage = ReadBusinessMessage::class;
    case deleteBusinessMessages = DeleteBusinessMessages::class;
    case editBusinessStory = EditBusinessStory::class;
    case deleteBusinessStory = DeleteBusinessStory::class;
    case setBusinessAccountName = SetBusinessAccountName::class;
    case setBusinessAccountBio = SetBusinessAccountBio::class;
    case setBusinessAccountProfilePhoto = SetBusinessAccountProfilePhoto::class;
    case setBusinessAccountUsername = SetBusinessAccountUsername::class;
    case setBusinessAccountGiftSettings = SetBusinessAccountGiftSettings::class;
    case getBusinessAccountStarAmount = GetBusinessAccountStarAmount::class;
    case transferBusinessAccountStars = TransferBusinessAccountStars::class;
    case checkQuickReplyShortcutName = CheckQuickReplyShortcutName::class;
    case loadQuickReplyShortcuts = LoadQuickReplyShortcuts::class;
    case setQuickReplyShortcutName = SetQuickReplyShortcutName::class;
    case deleteQuickReplyShortcut = DeleteQuickReplyShortcut::class;
    case reorderQuickReplyShortcuts = ReorderQuickReplyShortcuts::class;
    case loadQuickReplyShortcutMessages = LoadQuickReplyShortcutMessages::class;
    case deleteQuickReplyShortcutMessages = DeleteQuickReplyShortcutMessages::class;
    case addQuickReplyShortcutMessage = AddQuickReplyShortcutMessage::class;
    case addQuickReplyShortcutInlineQueryResultMessage = AddQuickReplyShortcutInlineQueryResultMessage::class;
    case addQuickReplyShortcutMessageAlbum = AddQuickReplyShortcutMessageAlbum::class;
    case readdQuickReplyShortcutMessages = ReaddQuickReplyShortcutMessages::class;
    case editQuickReplyMessage = EditQuickReplyMessage::class;
    case getForumTopicDefaultIcons = GetForumTopicDefaultIcons::class;
    case createForumTopic = CreateForumTopic::class;
    case editForumTopic = EditForumTopic::class;
    case getForumTopic = GetForumTopic::class;
    case getForumTopicLink = GetForumTopicLink::class;
    case getForumTopics = GetForumTopics::class;
    case setForumTopicNotificationSettings = SetForumTopicNotificationSettings::class;
    case toggleForumTopicIsClosed = ToggleForumTopicIsClosed::class;
    case toggleGeneralForumTopicIsHidden = ToggleGeneralForumTopicIsHidden::class;
    case toggleForumTopicIsPinned = ToggleForumTopicIsPinned::class;
    case setPinnedForumTopics = SetPinnedForumTopics::class;
    case deleteForumTopic = DeleteForumTopic::class;
    case getEmojiReaction = GetEmojiReaction::class;
    case getCustomEmojiReactionAnimations = GetCustomEmojiReactionAnimations::class;
    case getMessageAvailableReactions = GetMessageAvailableReactions::class;
    case clearRecentReactions = ClearRecentReactions::class;
    case addMessageReaction = AddMessageReaction::class;
    case removeMessageReaction = RemoveMessageReaction::class;
    case getChatAvailablePaidMessageReactionSenders = GetChatAvailablePaidMessageReactionSenders::class;
    case addPendingPaidMessageReaction = AddPendingPaidMessageReaction::class;
    case commitPendingPaidMessageReactions = CommitPendingPaidMessageReactions::class;
    case removePendingPaidMessageReactions = RemovePendingPaidMessageReactions::class;
    case setPaidMessageReactionType = SetPaidMessageReactionType::class;
    case setMessageReactions = SetMessageReactions::class;
    case getMessageAddedReactions = GetMessageAddedReactions::class;
    case setDefaultReactionType = SetDefaultReactionType::class;
    case getSavedMessagesTags = GetSavedMessagesTags::class;
    case setSavedMessagesTagLabel = SetSavedMessagesTagLabel::class;
    case getMessageEffect = GetMessageEffect::class;
    case searchQuote = SearchQuote::class;
    case getTextEntities = GetTextEntities::class;
    case parseTextEntities = ParseTextEntities::class;
    case parseMarkdown = ParseMarkdown::class;
    case getMarkdownText = GetMarkdownText::class;
    case getCountryFlagEmoji = GetCountryFlagEmoji::class;
    case getFileMimeType = GetFileMimeType::class;
    case getFileExtension = GetFileExtension::class;
    case cleanFileName = CleanFileName::class;
    case getLanguagePackString = GetLanguagePackString::class;
    case getJsonValue = GetJsonValue::class;
    case getJsonString = GetJsonString::class;
    case getThemeParametersJsonString = GetThemeParametersJsonString::class;
    case setPollAnswer = SetPollAnswer::class;
    case getPollVoters = GetPollVoters::class;
    case stopPoll = StopPoll::class;
    case addChecklistTasks = AddChecklistTasks::class;
    case markChecklistTasksAsDone = MarkChecklistTasksAsDone::class;
    case hideSuggestedAction = HideSuggestedAction::class;
    case hideContactCloseBirthdays = HideContactCloseBirthdays::class;
    case getBusinessConnection = GetBusinessConnection::class;
    case getLoginUrlInfo = GetLoginUrlInfo::class;
    case getLoginUrl = GetLoginUrl::class;
    case shareUsersWithBot = ShareUsersWithBot::class;
    case shareChatWithBot = ShareChatWithBot::class;
    case getInlineQueryResults = GetInlineQueryResults::class;
    case answerInlineQuery = AnswerInlineQuery::class;
    case savePreparedInlineMessage = SavePreparedInlineMessage::class;
    case getPreparedInlineMessage = GetPreparedInlineMessage::class;
    case getGrossingWebAppBots = GetGrossingWebAppBots::class;
    case searchWebApp = SearchWebApp::class;
    case getWebAppPlaceholder = GetWebAppPlaceholder::class;
    case getWebAppLinkUrl = GetWebAppLinkUrl::class;
    case getMainWebApp = GetMainWebApp::class;
    case getWebAppUrl = GetWebAppUrl::class;
    case sendWebAppData = SendWebAppData::class;
    case openWebApp = OpenWebApp::class;
    case closeWebApp = CloseWebApp::class;
    case answerWebAppQuery = AnswerWebAppQuery::class;
    case checkWebAppFileDownload = CheckWebAppFileDownload::class;
    case getCallbackQueryAnswer = GetCallbackQueryAnswer::class;
    case answerCallbackQuery = AnswerCallbackQuery::class;
    case answerShippingQuery = AnswerShippingQuery::class;
    case answerPreCheckoutQuery = AnswerPreCheckoutQuery::class;
    case setGameScore = SetGameScore::class;
    case setInlineGameScore = SetInlineGameScore::class;
    case getGameHighScores = GetGameHighScores::class;
    case getInlineGameHighScores = GetInlineGameHighScores::class;
    case deleteChatReplyMarkup = DeleteChatReplyMarkup::class;
    case sendChatAction = SendChatAction::class;
    case openChat = OpenChat::class;
    case closeChat = CloseChat::class;
    case viewMessages = ViewMessages::class;
    case openMessageContent = OpenMessageContent::class;
    case clickAnimatedEmojiMessage = ClickAnimatedEmojiMessage::class;
    case getInternalLink = GetInternalLink::class;
    case getInternalLinkType = GetInternalLinkType::class;
    case getExternalLinkInfo = GetExternalLinkInfo::class;
    case getExternalLink = GetExternalLink::class;
    case readAllChatMentions = ReadAllChatMentions::class;
    case readAllMessageThreadMentions = ReadAllMessageThreadMentions::class;
    case readAllChatReactions = ReadAllChatReactions::class;
    case readAllMessageThreadReactions = ReadAllMessageThreadReactions::class;
    case createPrivateChat = CreatePrivateChat::class;
    case createBasicGroupChat = CreateBasicGroupChat::class;
    case createSupergroupChat = CreateSupergroupChat::class;
    case createSecretChat = CreateSecretChat::class;
    case createNewBasicGroupChat = CreateNewBasicGroupChat::class;
    case createNewSupergroupChat = CreateNewSupergroupChat::class;
    case createNewSecretChat = CreateNewSecretChat::class;
    case upgradeBasicGroupChatToSupergroupChat = UpgradeBasicGroupChatToSupergroupChat::class;
    case getChatListsToAddChat = GetChatListsToAddChat::class;
    case addChatToList = AddChatToList::class;
    case getChatFolder = GetChatFolder::class;
    case createChatFolder = CreateChatFolder::class;
    case editChatFolder = EditChatFolder::class;
    case deleteChatFolder = DeleteChatFolder::class;
    case getChatFolderChatsToLeave = GetChatFolderChatsToLeave::class;
    case getChatFolderChatCount = GetChatFolderChatCount::class;
    case reorderChatFolders = ReorderChatFolders::class;
    case toggleChatFolderTags = ToggleChatFolderTags::class;
    case getRecommendedChatFolders = GetRecommendedChatFolders::class;
    case getChatFolderDefaultIconName = GetChatFolderDefaultIconName::class;
    case getChatsForChatFolderInviteLink = GetChatsForChatFolderInviteLink::class;
    case createChatFolderInviteLink = CreateChatFolderInviteLink::class;
    case getChatFolderInviteLinks = GetChatFolderInviteLinks::class;
    case editChatFolderInviteLink = EditChatFolderInviteLink::class;
    case deleteChatFolderInviteLink = DeleteChatFolderInviteLink::class;
    case checkChatFolderInviteLink = CheckChatFolderInviteLink::class;
    case addChatFolderByInviteLink = AddChatFolderByInviteLink::class;
    case getChatFolderNewChats = GetChatFolderNewChats::class;
    case processChatFolderNewChats = ProcessChatFolderNewChats::class;
    case getArchiveChatListSettings = GetArchiveChatListSettings::class;
    case setArchiveChatListSettings = SetArchiveChatListSettings::class;
    case setChatTitle = SetChatTitle::class;
    case setChatPhoto = SetChatPhoto::class;
    case setChatAccentColor = SetChatAccentColor::class;
    case setChatProfileAccentColor = SetChatProfileAccentColor::class;
    case setChatMessageAutoDeleteTime = SetChatMessageAutoDeleteTime::class;
    case setChatEmojiStatus = SetChatEmojiStatus::class;
    case setChatPermissions = SetChatPermissions::class;
    case setChatBackground = SetChatBackground::class;
    case deleteChatBackground = DeleteChatBackground::class;
    case setChatTheme = SetChatTheme::class;
    case setChatDraftMessage = SetChatDraftMessage::class;
    case setChatNotificationSettings = SetChatNotificationSettings::class;
    case toggleChatHasProtectedContent = ToggleChatHasProtectedContent::class;
    case toggleChatViewAsTopics = ToggleChatViewAsTopics::class;
    case toggleChatIsTranslatable = ToggleChatIsTranslatable::class;
    case toggleChatIsMarkedAsUnread = ToggleChatIsMarkedAsUnread::class;
    case toggleChatDefaultDisableNotification = ToggleChatDefaultDisableNotification::class;
    case setChatAvailableReactions = SetChatAvailableReactions::class;
    case setChatClientData = SetChatClientData::class;
    case setChatDescription = SetChatDescription::class;
    case setChatDiscussionGroup = SetChatDiscussionGroup::class;
    case setChatDirectMessagesGroup = SetChatDirectMessagesGroup::class;
    case setChatLocation = SetChatLocation::class;
    case setChatSlowModeDelay = SetChatSlowModeDelay::class;
    case pinChatMessage = PinChatMessage::class;
    case unpinChatMessage = UnpinChatMessage::class;
    case unpinAllChatMessages = UnpinAllChatMessages::class;
    case unpinAllMessageThreadMessages = UnpinAllMessageThreadMessages::class;
    case joinChat = JoinChat::class;
    case leaveChat = LeaveChat::class;
    case addChatMember = AddChatMember::class;
    case addChatMembers = AddChatMembers::class;
    case setChatMemberStatus = SetChatMemberStatus::class;
    case banChatMember = BanChatMember::class;
    case canTransferOwnership = CanTransferOwnership::class;
    case transferChatOwnership = TransferChatOwnership::class;
    case getChatMember = GetChatMember::class;
    case searchChatMembers = SearchChatMembers::class;
    case getChatAdministrators = GetChatAdministrators::class;
    case clearAllDraftMessages = ClearAllDraftMessages::class;
    case getSavedNotificationSound = GetSavedNotificationSound::class;
    case getSavedNotificationSounds = GetSavedNotificationSounds::class;
    case addSavedNotificationSound = AddSavedNotificationSound::class;
    case removeSavedNotificationSound = RemoveSavedNotificationSound::class;
    case getChatNotificationSettingsExceptions = GetChatNotificationSettingsExceptions::class;
    case getScopeNotificationSettings = GetScopeNotificationSettings::class;
    case setScopeNotificationSettings = SetScopeNotificationSettings::class;
    case setReactionNotificationSettings = SetReactionNotificationSettings::class;
    case resetAllNotificationSettings = ResetAllNotificationSettings::class;
    case toggleChatIsPinned = ToggleChatIsPinned::class;
    case setPinnedChats = SetPinnedChats::class;
    case readChatList = ReadChatList::class;
    case getCurrentWeather = GetCurrentWeather::class;
    case getStory = GetStory::class;
    case getChatsToPostStories = GetChatsToPostStories::class;
    case canPostStory = CanPostStory::class;
    case postStory = PostStory::class;
    case editStory = EditStory::class;
    case editStoryCover = EditStoryCover::class;
    case setStoryPrivacySettings = SetStoryPrivacySettings::class;
    case toggleStoryIsPostedToChatPage = ToggleStoryIsPostedToChatPage::class;
    case deleteStory = DeleteStory::class;
    case getStoryNotificationSettingsExceptions = GetStoryNotificationSettingsExceptions::class;
    case loadActiveStories = LoadActiveStories::class;
    case setChatActiveStoriesList = SetChatActiveStoriesList::class;
    case getChatActiveStories = GetChatActiveStories::class;
    case getChatPostedToChatPageStories = GetChatPostedToChatPageStories::class;
    case getChatArchivedStories = GetChatArchivedStories::class;
    case setChatPinnedStories = SetChatPinnedStories::class;
    case openStory = OpenStory::class;
    case closeStory = CloseStory::class;
    case getStoryAvailableReactions = GetStoryAvailableReactions::class;
    case setStoryReaction = SetStoryReaction::class;
    case getStoryInteractions = GetStoryInteractions::class;
    case getChatStoryInteractions = GetChatStoryInteractions::class;
    case reportStory = ReportStory::class;
    case activateStoryStealthMode = ActivateStoryStealthMode::class;
    case getStoryPublicForwards = GetStoryPublicForwards::class;
    case getChatBoostLevelFeatures = GetChatBoostLevelFeatures::class;
    case getChatBoostFeatures = GetChatBoostFeatures::class;
    case getAvailableChatBoostSlots = GetAvailableChatBoostSlots::class;
    case getChatBoostStatus = GetChatBoostStatus::class;
    case boostChat = BoostChat::class;
    case getChatBoostLink = GetChatBoostLink::class;
    case getChatBoostLinkInfo = GetChatBoostLinkInfo::class;
    case getChatBoosts = GetChatBoosts::class;
    case getUserChatBoosts = GetUserChatBoosts::class;
    case getAttachmentMenuBot = GetAttachmentMenuBot::class;
    case toggleBotIsAddedToAttachmentMenu = ToggleBotIsAddedToAttachmentMenu::class;
    case getThemedEmojiStatuses = GetThemedEmojiStatuses::class;
    case getRecentEmojiStatuses = GetRecentEmojiStatuses::class;
    case getUpgradedGiftEmojiStatuses = GetUpgradedGiftEmojiStatuses::class;
    case getDefaultEmojiStatuses = GetDefaultEmojiStatuses::class;
    case clearRecentEmojiStatuses = ClearRecentEmojiStatuses::class;
    case getThemedChatEmojiStatuses = GetThemedChatEmojiStatuses::class;
    case getDefaultChatEmojiStatuses = GetDefaultChatEmojiStatuses::class;
    case getDisallowedChatEmojiStatuses = GetDisallowedChatEmojiStatuses::class;
    case downloadFile = DownloadFile::class;
    case getFileDownloadedPrefixSize = GetFileDownloadedPrefixSize::class;
    case cancelDownloadFile = CancelDownloadFile::class;
    case getSuggestedFileName = GetSuggestedFileName::class;
    case preliminaryUploadFile = PreliminaryUploadFile::class;
    case cancelPreliminaryUploadFile = CancelPreliminaryUploadFile::class;
    case writeGeneratedFilePart = WriteGeneratedFilePart::class;
    case setFileGenerationProgress = SetFileGenerationProgress::class;
    case finishFileGeneration = FinishFileGeneration::class;
    case readFilePart = ReadFilePart::class;
    case deleteFile = DeleteFile::class;
    case addFileToDownloads = AddFileToDownloads::class;
    case toggleDownloadIsPaused = ToggleDownloadIsPaused::class;
    case toggleAllDownloadsArePaused = ToggleAllDownloadsArePaused::class;
    case removeFileFromDownloads = RemoveFileFromDownloads::class;
    case removeAllFilesFromDownloads = RemoveAllFilesFromDownloads::class;
    case searchFileDownloads = SearchFileDownloads::class;
    case setApplicationVerificationToken = SetApplicationVerificationToken::class;
    case getMessageFileType = GetMessageFileType::class;
    case getMessageImportConfirmationText = GetMessageImportConfirmationText::class;
    case importMessages = ImportMessages::class;
    case replacePrimaryChatInviteLink = ReplacePrimaryChatInviteLink::class;
    case createChatInviteLink = CreateChatInviteLink::class;
    case createChatSubscriptionInviteLink = CreateChatSubscriptionInviteLink::class;
    case editChatInviteLink = EditChatInviteLink::class;
    case editChatSubscriptionInviteLink = EditChatSubscriptionInviteLink::class;
    case getChatInviteLink = GetChatInviteLink::class;
    case getChatInviteLinkCounts = GetChatInviteLinkCounts::class;
    case getChatInviteLinks = GetChatInviteLinks::class;
    case getChatInviteLinkMembers = GetChatInviteLinkMembers::class;
    case revokeChatInviteLink = RevokeChatInviteLink::class;
    case deleteRevokedChatInviteLink = DeleteRevokedChatInviteLink::class;
    case deleteAllRevokedChatInviteLinks = DeleteAllRevokedChatInviteLinks::class;
    case checkChatInviteLink = CheckChatInviteLink::class;
    case joinChatByInviteLink = JoinChatByInviteLink::class;
    case getChatJoinRequests = GetChatJoinRequests::class;
    case processChatJoinRequest = ProcessChatJoinRequest::class;
    case processChatJoinRequests = ProcessChatJoinRequests::class;
    case createCall = CreateCall::class;
    case acceptCall = AcceptCall::class;
    case sendCallSignalingData = SendCallSignalingData::class;
    case discardCall = DiscardCall::class;
    case sendCallRating = SendCallRating::class;
    case sendCallDebugInformation = SendCallDebugInformation::class;
    case sendCallLog = SendCallLog::class;
    case getVideoChatAvailableParticipants = GetVideoChatAvailableParticipants::class;
    case setVideoChatDefaultParticipant = SetVideoChatDefaultParticipant::class;
    case createVideoChat = CreateVideoChat::class;
    case createGroupCall = CreateGroupCall::class;
    case getVideoChatRtmpUrl = GetVideoChatRtmpUrl::class;
    case replaceVideoChatRtmpUrl = ReplaceVideoChatRtmpUrl::class;
    case getGroupCall = GetGroupCall::class;
    case startScheduledVideoChat = StartScheduledVideoChat::class;
    case toggleVideoChatEnabledStartNotification = ToggleVideoChatEnabledStartNotification::class;
    case joinGroupCall = JoinGroupCall::class;
    case joinVideoChat = JoinVideoChat::class;
    case startGroupCallScreenSharing = StartGroupCallScreenSharing::class;
    case toggleGroupCallScreenSharingIsPaused = ToggleGroupCallScreenSharingIsPaused::class;
    case endGroupCallScreenSharing = EndGroupCallScreenSharing::class;
    case setVideoChatTitle = SetVideoChatTitle::class;
    case toggleVideoChatMuteNewParticipants = ToggleVideoChatMuteNewParticipants::class;
    case inviteGroupCallParticipant = InviteGroupCallParticipant::class;
    case declineGroupCallInvitation = DeclineGroupCallInvitation::class;
    case banGroupCallParticipants = BanGroupCallParticipants::class;
    case inviteVideoChatParticipants = InviteVideoChatParticipants::class;
    case getVideoChatInviteLink = GetVideoChatInviteLink::class;
    case revokeGroupCallInviteLink = RevokeGroupCallInviteLink::class;
    case startGroupCallRecording = StartGroupCallRecording::class;
    case endGroupCallRecording = EndGroupCallRecording::class;
    case toggleGroupCallIsMyVideoPaused = ToggleGroupCallIsMyVideoPaused::class;
    case toggleGroupCallIsMyVideoEnabled = ToggleGroupCallIsMyVideoEnabled::class;
    case setGroupCallParticipantIsSpeaking = SetGroupCallParticipantIsSpeaking::class;
    case toggleGroupCallParticipantIsMuted = ToggleGroupCallParticipantIsMuted::class;
    case setGroupCallParticipantVolumeLevel = SetGroupCallParticipantVolumeLevel::class;
    case toggleGroupCallParticipantIsHandRaised = ToggleGroupCallParticipantIsHandRaised::class;
    case getGroupCallParticipants = GetGroupCallParticipants::class;
    case loadGroupCallParticipants = LoadGroupCallParticipants::class;
    case leaveGroupCall = LeaveGroupCall::class;
    case endGroupCall = EndGroupCall::class;
    case getVideoChatStreams = GetVideoChatStreams::class;
    case getVideoChatStreamSegment = GetVideoChatStreamSegment::class;
    case encryptGroupCallData = EncryptGroupCallData::class;
    case decryptGroupCallData = DecryptGroupCallData::class;
    case setMessageSenderBlockList = SetMessageSenderBlockList::class;
    case blockMessageSenderFromReplies = BlockMessageSenderFromReplies::class;
    case getBlockedMessageSenders = GetBlockedMessageSenders::class;
    case addContact = AddContact::class;
    case importContacts = ImportContacts::class;
    case getContacts = GetContacts::class;
    case searchContacts = SearchContacts::class;
    case removeContacts = RemoveContacts::class;
    case getImportedContactCount = GetImportedContactCount::class;
    case changeImportedContacts = ChangeImportedContacts::class;
    case clearImportedContacts = ClearImportedContacts::class;
    case setCloseFriends = SetCloseFriends::class;
    case getCloseFriends = GetCloseFriends::class;
    case setUserPersonalProfilePhoto = SetUserPersonalProfilePhoto::class;
    case suggestUserProfilePhoto = SuggestUserProfilePhoto::class;
    case toggleBotCanManageEmojiStatus = ToggleBotCanManageEmojiStatus::class;
    case setUserEmojiStatus = SetUserEmojiStatus::class;
    case searchUserByPhoneNumber = SearchUserByPhoneNumber::class;
    case sharePhoneNumber = SharePhoneNumber::class;
    case getUserProfilePhotos = GetUserProfilePhotos::class;
    case getStickerOutline = GetStickerOutline::class;
    case getStickers = GetStickers::class;
    case getAllStickerEmojis = GetAllStickerEmojis::class;
    case searchStickers = SearchStickers::class;
    case getGreetingStickers = GetGreetingStickers::class;
    case getPremiumStickers = GetPremiumStickers::class;
    case getInstalledStickerSets = GetInstalledStickerSets::class;
    case getArchivedStickerSets = GetArchivedStickerSets::class;
    case getTrendingStickerSets = GetTrendingStickerSets::class;
    case getAttachedStickerSets = GetAttachedStickerSets::class;
    case getStickerSet = GetStickerSet::class;
    case getStickerSetName = GetStickerSetName::class;
    case searchStickerSet = SearchStickerSet::class;
    case searchInstalledStickerSets = SearchInstalledStickerSets::class;
    case searchStickerSets = SearchStickerSets::class;
    case changeStickerSet = ChangeStickerSet::class;
    case viewTrendingStickerSets = ViewTrendingStickerSets::class;
    case reorderInstalledStickerSets = ReorderInstalledStickerSets::class;
    case getRecentStickers = GetRecentStickers::class;
    case addRecentSticker = AddRecentSticker::class;
    case removeRecentSticker = RemoveRecentSticker::class;
    case clearRecentStickers = ClearRecentStickers::class;
    case getFavoriteStickers = GetFavoriteStickers::class;
    case addFavoriteSticker = AddFavoriteSticker::class;
    case removeFavoriteSticker = RemoveFavoriteSticker::class;
    case getStickerEmojis = GetStickerEmojis::class;
    case searchEmojis = SearchEmojis::class;
    case getKeywordEmojis = GetKeywordEmojis::class;
    case getEmojiCategories = GetEmojiCategories::class;
    case getAnimatedEmoji = GetAnimatedEmoji::class;
    case getEmojiSuggestionsUrl = GetEmojiSuggestionsUrl::class;
    case getCustomEmojiStickers = GetCustomEmojiStickers::class;
    case getDefaultChatPhotoCustomEmojiStickers = GetDefaultChatPhotoCustomEmojiStickers::class;
    case getDefaultProfilePhotoCustomEmojiStickers = GetDefaultProfilePhotoCustomEmojiStickers::class;
    case getDefaultBackgroundCustomEmojiStickers = GetDefaultBackgroundCustomEmojiStickers::class;
    case getSavedAnimations = GetSavedAnimations::class;
    case addSavedAnimation = AddSavedAnimation::class;
    case removeSavedAnimation = RemoveSavedAnimation::class;
    case getRecentInlineBots = GetRecentInlineBots::class;
    case getOwnedBots = GetOwnedBots::class;
    case searchHashtags = SearchHashtags::class;
    case removeRecentHashtag = RemoveRecentHashtag::class;
    case getLinkPreview = GetLinkPreview::class;
    case getWebPageInstantView = GetWebPageInstantView::class;
    case setProfilePhoto = SetProfilePhoto::class;
    case deleteProfilePhoto = DeleteProfilePhoto::class;
    case setAccentColor = SetAccentColor::class;
    case setProfileAccentColor = SetProfileAccentColor::class;
    case setName = SetName::class;
    case setBio = SetBio::class;
    case setUsername = SetUsername::class;
    case toggleUsernameIsActive = ToggleUsernameIsActive::class;
    case reorderActiveUsernames = ReorderActiveUsernames::class;
    case setBirthdate = SetBirthdate::class;
    case setPersonalChat = SetPersonalChat::class;
    case setEmojiStatus = SetEmojiStatus::class;
    case toggleHasSponsoredMessagesEnabled = ToggleHasSponsoredMessagesEnabled::class;
    case setBusinessLocation = SetBusinessLocation::class;
    case setBusinessOpeningHours = SetBusinessOpeningHours::class;
    case setBusinessGreetingMessageSettings = SetBusinessGreetingMessageSettings::class;
    case setBusinessAwayMessageSettings = SetBusinessAwayMessageSettings::class;
    case setBusinessStartPage = SetBusinessStartPage::class;
    case sendPhoneNumberCode = SendPhoneNumberCode::class;
    case sendPhoneNumberFirebaseSms = SendPhoneNumberFirebaseSms::class;
    case reportPhoneNumberCodeMissing = ReportPhoneNumberCodeMissing::class;
    case resendPhoneNumberCode = ResendPhoneNumberCode::class;
    case checkPhoneNumberCode = CheckPhoneNumberCode::class;
    case getBusinessConnectedBot = GetBusinessConnectedBot::class;
    case setBusinessConnectedBot = SetBusinessConnectedBot::class;
    case deleteBusinessConnectedBot = DeleteBusinessConnectedBot::class;
    case toggleBusinessConnectedBotChatIsPaused = ToggleBusinessConnectedBotChatIsPaused::class;
    case removeBusinessConnectedBotFromChat = RemoveBusinessConnectedBotFromChat::class;
    case getBusinessChatLinks = GetBusinessChatLinks::class;
    case createBusinessChatLink = CreateBusinessChatLink::class;
    case editBusinessChatLink = EditBusinessChatLink::class;
    case deleteBusinessChatLink = DeleteBusinessChatLink::class;
    case getBusinessChatLinkInfo = GetBusinessChatLinkInfo::class;
    case getUserLink = GetUserLink::class;
    case searchUserByToken = SearchUserByToken::class;
    case setCommands = SetCommands::class;
    case deleteCommands = DeleteCommands::class;
    case getCommands = GetCommands::class;
    case setMenuButton = SetMenuButton::class;
    case getMenuButton = GetMenuButton::class;
    case setDefaultGroupAdministratorRights = SetDefaultGroupAdministratorRights::class;
    case setDefaultChannelAdministratorRights = SetDefaultChannelAdministratorRights::class;
    case canBotSendMessages = CanBotSendMessages::class;
    case allowBotToSendMessages = AllowBotToSendMessages::class;
    case sendWebAppCustomRequest = SendWebAppCustomRequest::class;
    case getBotMediaPreviews = GetBotMediaPreviews::class;
    case getBotMediaPreviewInfo = GetBotMediaPreviewInfo::class;
    case addBotMediaPreview = AddBotMediaPreview::class;
    case editBotMediaPreview = EditBotMediaPreview::class;
    case reorderBotMediaPreviews = ReorderBotMediaPreviews::class;
    case deleteBotMediaPreviews = DeleteBotMediaPreviews::class;
    case setBotName = SetBotName::class;
    case getBotName = GetBotName::class;
    case setBotProfilePhoto = SetBotProfilePhoto::class;
    case toggleBotUsernameIsActive = ToggleBotUsernameIsActive::class;
    case reorderBotActiveUsernames = ReorderBotActiveUsernames::class;
    case setBotInfoDescription = SetBotInfoDescription::class;
    case getBotInfoDescription = GetBotInfoDescription::class;
    case setBotInfoShortDescription = SetBotInfoShortDescription::class;
    case getBotInfoShortDescription = GetBotInfoShortDescription::class;
    case setMessageSenderBotVerification = SetMessageSenderBotVerification::class;
    case removeMessageSenderBotVerification = RemoveMessageSenderBotVerification::class;
    case getActiveSessions = GetActiveSessions::class;
    case terminateSession = TerminateSession::class;
    case terminateAllOtherSessions = TerminateAllOtherSessions::class;
    case confirmSession = ConfirmSession::class;
    case toggleSessionCanAcceptCalls = ToggleSessionCanAcceptCalls::class;
    case toggleSessionCanAcceptSecretChats = ToggleSessionCanAcceptSecretChats::class;
    case setInactiveSessionTtl = SetInactiveSessionTtl::class;
    case getConnectedWebsites = GetConnectedWebsites::class;
    case disconnectWebsite = DisconnectWebsite::class;
    case disconnectAllWebsites = DisconnectAllWebsites::class;
    case setSupergroupUsername = SetSupergroupUsername::class;
    case toggleSupergroupUsernameIsActive = ToggleSupergroupUsernameIsActive::class;
    case disableAllSupergroupUsernames = DisableAllSupergroupUsernames::class;
    case reorderSupergroupActiveUsernames = ReorderSupergroupActiveUsernames::class;
    case setSupergroupStickerSet = SetSupergroupStickerSet::class;
    case setSupergroupCustomEmojiStickerSet = SetSupergroupCustomEmojiStickerSet::class;
    case setSupergroupUnrestrictBoostCount = SetSupergroupUnrestrictBoostCount::class;
    case toggleSupergroupSignMessages = ToggleSupergroupSignMessages::class;
    case toggleSupergroupJoinToSendMessages = ToggleSupergroupJoinToSendMessages::class;
    case toggleSupergroupJoinByRequest = ToggleSupergroupJoinByRequest::class;
    case toggleSupergroupIsAllHistoryAvailable = ToggleSupergroupIsAllHistoryAvailable::class;
    case toggleSupergroupCanHaveSponsoredMessages = ToggleSupergroupCanHaveSponsoredMessages::class;
    case toggleSupergroupHasAutomaticTranslation = ToggleSupergroupHasAutomaticTranslation::class;
    case toggleSupergroupHasHiddenMembers = ToggleSupergroupHasHiddenMembers::class;
    case toggleSupergroupHasAggressiveAntiSpamEnabled = ToggleSupergroupHasAggressiveAntiSpamEnabled::class;
    case toggleSupergroupIsForum = ToggleSupergroupIsForum::class;
    case toggleSupergroupIsBroadcastGroup = ToggleSupergroupIsBroadcastGroup::class;
    case reportSupergroupSpam = ReportSupergroupSpam::class;
    case reportSupergroupAntiSpamFalsePositive = ReportSupergroupAntiSpamFalsePositive::class;
    case getSupergroupMembers = GetSupergroupMembers::class;
    case closeSecretChat = CloseSecretChat::class;
    case getChatEventLog = GetChatEventLog::class;
    case getTimeZones = GetTimeZones::class;
    case getPaymentForm = GetPaymentForm::class;
    case validateOrderInfo = ValidateOrderInfo::class;
    case sendPaymentForm = SendPaymentForm::class;
    case getPaymentReceipt = GetPaymentReceipt::class;
    case getSavedOrderInfo = GetSavedOrderInfo::class;
    case deleteSavedOrderInfo = DeleteSavedOrderInfo::class;
    case deleteSavedCredentials = DeleteSavedCredentials::class;
    case setGiftSettings = SetGiftSettings::class;
    case getAvailableGifts = GetAvailableGifts::class;
    case sendGift = SendGift::class;
    case sellGift = SellGift::class;
    case toggleGiftIsSaved = ToggleGiftIsSaved::class;
    case setPinnedGifts = SetPinnedGifts::class;
    case toggleChatGiftNotifications = ToggleChatGiftNotifications::class;
    case getGiftUpgradePreview = GetGiftUpgradePreview::class;
    case upgradeGift = UpgradeGift::class;
    case transferGift = TransferGift::class;
    case sendResoldGift = SendResoldGift::class;
    case getReceivedGifts = GetReceivedGifts::class;
    case getReceivedGift = GetReceivedGift::class;
    case getUpgradedGift = GetUpgradedGift::class;
    case getUpgradedGiftWithdrawalUrl = GetUpgradedGiftWithdrawalUrl::class;
    case setGiftResalePrice = SetGiftResalePrice::class;
    case searchGiftsForResale = SearchGiftsForResale::class;
    case createInvoiceLink = CreateInvoiceLink::class;
    case refundStarPayment = RefundStarPayment::class;
    case getSupportUser = GetSupportUser::class;
    case getBackgroundUrl = GetBackgroundUrl::class;
    case searchBackground = SearchBackground::class;
    case setDefaultBackground = SetDefaultBackground::class;
    case deleteDefaultBackground = DeleteDefaultBackground::class;
    case getInstalledBackgrounds = GetInstalledBackgrounds::class;
    case removeInstalledBackground = RemoveInstalledBackground::class;
    case resetInstalledBackgrounds = ResetInstalledBackgrounds::class;
    case getLocalizationTargetInfo = GetLocalizationTargetInfo::class;
    case getLanguagePackInfo = GetLanguagePackInfo::class;
    case getLanguagePackStrings = GetLanguagePackStrings::class;
    case synchronizeLanguagePack = SynchronizeLanguagePack::class;
    case addCustomServerLanguagePack = AddCustomServerLanguagePack::class;
    case setCustomLanguagePack = SetCustomLanguagePack::class;
    case editCustomLanguagePackInfo = EditCustomLanguagePackInfo::class;
    case setCustomLanguagePackString = SetCustomLanguagePackString::class;
    case deleteLanguagePack = DeleteLanguagePack::class;
    case registerDevice = RegisterDevice::class;
    case processPushNotification = ProcessPushNotification::class;
    case getPushReceiverId = GetPushReceiverId::class;
    case getRecentlyVisitedTMeUrls = GetRecentlyVisitedTMeUrls::class;
    case setUserPrivacySettingRules = SetUserPrivacySettingRules::class;
    case getUserPrivacySettingRules = GetUserPrivacySettingRules::class;
    case setReadDatePrivacySettings = SetReadDatePrivacySettings::class;
    case getReadDatePrivacySettings = GetReadDatePrivacySettings::class;
    case setNewChatPrivacySettings = SetNewChatPrivacySettings::class;
    case getNewChatPrivacySettings = GetNewChatPrivacySettings::class;
    case getPaidMessageRevenue = GetPaidMessageRevenue::class;
    case allowUnpaidMessagesFromUser = AllowUnpaidMessagesFromUser::class;
    case setChatPaidMessageStarCount = SetChatPaidMessageStarCount::class;
    case canSendMessageToUser = CanSendMessageToUser::class;
    case getOption = GetOption::class;
    case setOption = SetOption::class;
    case setAccountTtl = SetAccountTtl::class;
    case getAccountTtl = GetAccountTtl::class;
    case deleteAccount = DeleteAccount::class;
    case setDefaultMessageAutoDeleteTime = SetDefaultMessageAutoDeleteTime::class;
    case getDefaultMessageAutoDeleteTime = GetDefaultMessageAutoDeleteTime::class;
    case removeChatActionBar = RemoveChatActionBar::class;
    case reportChat = ReportChat::class;
    case reportChatPhoto = ReportChatPhoto::class;
    case reportMessageReactions = ReportMessageReactions::class;
    case getChatRevenueStatistics = GetChatRevenueStatistics::class;
    case getChatRevenueWithdrawalUrl = GetChatRevenueWithdrawalUrl::class;
    case getChatRevenueTransactions = GetChatRevenueTransactions::class;
    case getStarRevenueStatistics = GetStarRevenueStatistics::class;
    case getStarWithdrawalUrl = GetStarWithdrawalUrl::class;
    case getStarAdAccountUrl = GetStarAdAccountUrl::class;
    case getChatStatistics = GetChatStatistics::class;
    case getMessageStatistics = GetMessageStatistics::class;
    case getMessagePublicForwards = GetMessagePublicForwards::class;
    case getStoryStatistics = GetStoryStatistics::class;
    case getStatisticalGraph = GetStatisticalGraph::class;
    case getStorageStatistics = GetStorageStatistics::class;
    case getStorageStatisticsFast = GetStorageStatisticsFast::class;
    case getDatabaseStatistics = GetDatabaseStatistics::class;
    case optimizeStorage = OptimizeStorage::class;
    case setNetworkType = SetNetworkType::class;
    case getNetworkStatistics = GetNetworkStatistics::class;
    case addNetworkStatistics = AddNetworkStatistics::class;
    case resetNetworkStatistics = ResetNetworkStatistics::class;
    case getAutoDownloadSettingsPresets = GetAutoDownloadSettingsPresets::class;
    case setAutoDownloadSettings = SetAutoDownloadSettings::class;
    case getAutosaveSettings = GetAutosaveSettings::class;
    case setAutosaveSettings = SetAutosaveSettings::class;
    case clearAutosaveSettingsExceptions = ClearAutosaveSettingsExceptions::class;
    case getBankCardInfo = GetBankCardInfo::class;
    case getPassportElement = GetPassportElement::class;
    case getAllPassportElements = GetAllPassportElements::class;
    case setPassportElement = SetPassportElement::class;
    case deletePassportElement = DeletePassportElement::class;
    case setPassportElementErrors = SetPassportElementErrors::class;
    case getPreferredCountryLanguage = GetPreferredCountryLanguage::class;
    case sendEmailAddressVerificationCode = SendEmailAddressVerificationCode::class;
    case resendEmailAddressVerificationCode = ResendEmailAddressVerificationCode::class;
    case checkEmailAddressVerificationCode = CheckEmailAddressVerificationCode::class;
    case getPassportAuthorizationForm = GetPassportAuthorizationForm::class;
    case getPassportAuthorizationFormAvailableElements = GetPassportAuthorizationFormAvailableElements::class;
    case sendPassportAuthorizationForm = SendPassportAuthorizationForm::class;
    case setBotUpdatesStatus = SetBotUpdatesStatus::class;
    case uploadStickerFile = UploadStickerFile::class;
    case getSuggestedStickerSetName = GetSuggestedStickerSetName::class;
    case checkStickerSetName = CheckStickerSetName::class;
    case createNewStickerSet = CreateNewStickerSet::class;
    case addStickerToSet = AddStickerToSet::class;
    case replaceStickerInSet = ReplaceStickerInSet::class;
    case setStickerSetThumbnail = SetStickerSetThumbnail::class;
    case setCustomEmojiStickerSetThumbnail = SetCustomEmojiStickerSetThumbnail::class;
    case setStickerSetTitle = SetStickerSetTitle::class;
    case deleteStickerSet = DeleteStickerSet::class;
    case setStickerPositionInSet = SetStickerPositionInSet::class;
    case removeStickerFromSet = RemoveStickerFromSet::class;
    case setStickerEmojis = SetStickerEmojis::class;
    case setStickerKeywords = SetStickerKeywords::class;
    case setStickerMaskPosition = SetStickerMaskPosition::class;
    case getOwnedStickerSets = GetOwnedStickerSets::class;
    case getMapThumbnailFile = GetMapThumbnailFile::class;
    case getPremiumLimit = GetPremiumLimit::class;
    case getPremiumFeatures = GetPremiumFeatures::class;
    case getPremiumStickerExamples = GetPremiumStickerExamples::class;
    case getPremiumInfoSticker = GetPremiumInfoSticker::class;
    case viewPremiumFeature = ViewPremiumFeature::class;
    case clickPremiumSubscriptionButton = ClickPremiumSubscriptionButton::class;
    case getPremiumState = GetPremiumState::class;
    case getPremiumGiftPaymentOptions = GetPremiumGiftPaymentOptions::class;
    case getPremiumGiveawayPaymentOptions = GetPremiumGiveawayPaymentOptions::class;
    case checkPremiumGiftCode = CheckPremiumGiftCode::class;
    case applyPremiumGiftCode = ApplyPremiumGiftCode::class;
    case giftPremiumWithStars = GiftPremiumWithStars::class;
    case launchPrepaidGiveaway = LaunchPrepaidGiveaway::class;
    case getGiveawayInfo = GetGiveawayInfo::class;
    case getStarPaymentOptions = GetStarPaymentOptions::class;
    case getStarGiftPaymentOptions = GetStarGiftPaymentOptions::class;
    case getStarGiveawayPaymentOptions = GetStarGiveawayPaymentOptions::class;
    case getStarTransactions = GetStarTransactions::class;
    case getStarSubscriptions = GetStarSubscriptions::class;
    case canPurchaseFromStore = CanPurchaseFromStore::class;
    case assignStoreTransaction = AssignStoreTransaction::class;
    case editStarSubscription = EditStarSubscription::class;
    case editUserStarSubscription = EditUserStarSubscription::class;
    case reuseStarSubscription = ReuseStarSubscription::class;
    case setChatAffiliateProgram = SetChatAffiliateProgram::class;
    case searchChatAffiliateProgram = SearchChatAffiliateProgram::class;
    case searchAffiliatePrograms = SearchAffiliatePrograms::class;
    case connectAffiliateProgram = ConnectAffiliateProgram::class;
    case disconnectAffiliateProgram = DisconnectAffiliateProgram::class;
    case getConnectedAffiliateProgram = GetConnectedAffiliateProgram::class;
    case getConnectedAffiliatePrograms = GetConnectedAffiliatePrograms::class;
    case getBusinessFeatures = GetBusinessFeatures::class;
    case acceptTermsOfService = AcceptTermsOfService::class;
    case searchStringsByPrefix = SearchStringsByPrefix::class;
    case sendCustomRequest = SendCustomRequest::class;
    case answerCustomQuery = AnswerCustomQuery::class;
    case setAlarm = SetAlarm::class;
    case getCountries = GetCountries::class;
    case getCountryCode = GetCountryCode::class;
    case getPhoneNumberInfo = GetPhoneNumberInfo::class;
    case getPhoneNumberInfoSync = GetPhoneNumberInfoSync::class;
    case getCollectibleItemInfo = GetCollectibleItemInfo::class;
    case getDeepLinkInfo = GetDeepLinkInfo::class;
    case getApplicationConfig = GetApplicationConfig::class;
    case saveApplicationLogEvent = SaveApplicationLogEvent::class;
    case getApplicationDownloadLink = GetApplicationDownloadLink::class;
    case addProxy = AddProxy::class;
    case editProxy = EditProxy::class;
    case enableProxy = EnableProxy::class;
    case disableProxy = DisableProxy::class;
    case removeProxy = RemoveProxy::class;
    case getProxies = GetProxies::class;
    case getProxyLink = GetProxyLink::class;
    case pingProxy = PingProxy::class;
    case setLogStream = SetLogStream::class;
    case getLogStream = GetLogStream::class;
    case setLogVerbosityLevel = SetLogVerbosityLevel::class;
    case getLogVerbosityLevel = GetLogVerbosityLevel::class;
    case getLogTags = GetLogTags::class;
    case setLogTagVerbosityLevel = SetLogTagVerbosityLevel::class;
    case getLogTagVerbosityLevel = GetLogTagVerbosityLevel::class;
    case addLogMessage = AddLogMessage::class;
    case getUserSupportInfo = GetUserSupportInfo::class;
    case setUserSupportInfo = SetUserSupportInfo::class;
    case getSupportName = GetSupportName::class;
    case testCallEmpty = TestCallEmpty::class;
    case testCallString = TestCallString::class;
    case testCallBytes = TestCallBytes::class;
    case testCallVectorInt = TestCallVectorInt::class;
    case testCallVectorIntObject = TestCallVectorIntObject::class;
    case testCallVectorString = TestCallVectorString::class;
    case testCallVectorStringObject = TestCallVectorStringObject::class;
    case testSquareInt = TestSquareInt::class;
    case testNetwork = TestNetwork::class;
    case testProxy = TestProxy::class;
    case testGetDifference = TestGetDifference::class;
    case testUseUpdate = TestUseUpdate::class;
    case testReturnError = TestReturnError::class;
}
